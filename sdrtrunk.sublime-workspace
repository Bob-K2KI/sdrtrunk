{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"file",
				"file_base_name"
			],
			[
				"end",
				"end_re"
			],
			[
				"if",
				"ifmain	if __name__ == '__main__'"
			],
			[
				"stat",
				"start_msg"
			],
			[
				"test",
				"test_arr"
			],
			[
				"start",
				"start_msg"
			],
			[
				"time",
				"time_to_ms"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "Searching 474 files for \"filename\"\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/controller/channel/ProcessingChain.java:\n  451  					{\n  452  		                Log.error( getLogPrefix() + \"Couldn't stop recorder [\" + \n  453: 		                		recorder.getFileName() + \"] \" + \n  454  		                		ioe.getLocalizedMessage() );\n  455  					}\n  ...\n  476  					{\n  477  						Log.info( getLogPrefix() + \"- started audio recording [\" + \n  478: 								recorder.getFileName() + \"]\" );\n  479  \n  480  						mDecoder.addFloatListener( (FloatWaveRecorder)recorder );\n  ...\n  483  					{\n  484  						Log.info( getLogPrefix() + \"- started baseband recording [\" + \n  485: 								recorder.getFileName() + \"]\" );\n  486  \n  487  						mDecoder.addComplexListener( (ComplexWaveRecorder )recorder );\n  ...\n  492  	            {\n  493  	            	Log.error( getLogPrefix() + \"Unable to start recorder [\" + \n  494: 	            							recorder.getFileName() + \"]\" );\n  495  	            }\n  496  			}\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/eventlog/CallEventLogger.java:\n   25  public class CallEventLogger extends EventLogger implements Listener<CallEvent>\n   26  {\n   27: 	public CallEventLogger( Path logDirectory, String fileNameSuffix )\n   28  	{\n   29: 		super( logDirectory, fileNameSuffix );\n   30  	}\n   31  	\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/eventlog/EventLogger.java:\n   31  public abstract class EventLogger\n   32  {\n   33: 	/* Illegal filename characters */\n   34  	private static final String[] mIllegalCharacters = \n   35  		{ \"#\", \"%\", \"&\", \"{\", \"}\", \"\\\\\", \"<\", \">\", \"*\", \"?\", \"/\", \n   ..\n   37  	\n   38  	private Path mLogDirectory;\n   39: 	private String mFileNameSuffix;\n   40: 	private String mLogFileName;\n   41  	protected Writer mLogFile;\n   42  \n   43: 	public EventLogger( Path logDirectory, String fileNameSuffix )\n   44  	{\n   45  		mLogDirectory = logDirectory;\n   46: 		mFileNameSuffix = fileNameSuffix;\n   47  	}\n   48  	\n   49  	public String toString()\n   50  	{\n   51: 		if( mLogFileName != null )\n   52  		{\n   53: 			return mLogFileName;\n   54  		}\n   55  		else\n   ..\n   70      		sb.append( TimeStamp.getTimeStamp( \"_\" ) );\n   71      		sb.append( \"_\" );\n   72:     		sb.append( replaceIllegalCharacters( mFileNameSuffix ) );\n   73  \n   74:     		mLogFileName = sb.toString();\n   75      		\n   76:     		Log.info( \"Creating log file:\" + mLogFileName );\n   77      		\n   78: 			mLogFile = new OutputStreamWriter(new FileOutputStream( mLogFileName ) );\n   79  			\n   80  			write( getHeader() );\n   ..\n   87  \n   88      /**\n   89:      * Replaces any illegal filename characters in the proposed filename\n   90       */\n   91:     private String replaceIllegalCharacters( String filename )\n   92      {\n   93      	for( String illegalCharacter: mIllegalCharacters )\n   94      	{\n   95:     		filename = filename.replace( illegalCharacter, \"_\" );\n   96      	}\n   97  \n   98:     	return filename;\n   99      }\n  100  \n  ...\n  110      		catch( Exception e )\n  111      		{\n  112:     			Log.error( \"Couldn't close log file:\" + mFileNameSuffix );\n  113      		}\n  114      	}\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/eventlog/MessageEventLogger.java:\n   30  	private Type mType;\n   31  	\n   32: 	public MessageEventLogger( Path logDirectory, String fileNameSuffix, Type type )\n   33  	{\n   34: 		super( logDirectory, fileNameSuffix );\n   35  		\n   36  		mType = type;\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/gui/SDRTrunk.java:\n  217  	            	}\n  218  	            	\n  219: 	            	String filename = TimeStamp.getTimeStamp( \"_\" ) + \n  220  	            			\"_screen_capture.png\";\n  221  \n  222: 	            	final Path captureFile = capturePath.resolve( filename );\n  223  \n  224  	            	EventQueue.invokeLater( new Runnable() \n\n/home/tweaver/workspace/sdrtrunk-read-only/src/log/Log.java:\n  145  \n  146      /**\n  147:      * Initializes logging to the specified filename\n  148       */\n  149:     public static void init( String filename )\n  150      {\n  151      	try \n  152      	{\n  153  			mLogFile = new OutputStreamWriter(\n  154: 					new FileOutputStream( filename ) );\n  155  			\n  156  			Log.info( \"SDRTrunk Multi-Channel Trunking Decoder Application Log\" );\n  157: 			Log.info( \"Log - application logging started [\" + filename + \"]\" );\n  158  			\n  159  			logUserEnvironment();\n  ...\n  161      	catch (FileNotFoundException e) \n  162      	{\n  163: 			System.out.println(\"Couldn't open log file:\" + filename );\n  164  		}    	\n  165      }\n  ...\n  172      	SystemProperties props = SystemProperties.getInstance();\n  173      	\n  174:     	String logBaseFileName = props.get( \"log.basefilename\", \n  175      										\"_SDRTrunk_application\" );\n  176      	\n  ...\n  190      	}\n  191      	\n  192:     	String logFileName = TimeStamp.getTimeStamp( \"_\" ) + logBaseFileName +\n  193      			\".log\";\n  194  \n  195:     	Path logFile = logPath.resolve( logFileName );\n  196      	\n  197      	init( logFile.toString() );\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/map/IconManager.java:\n  376  						JOptionPane.showMessageDialog( this, \n  377  								\"Please select an image file\", \n  378: 								\"Filename and path missing\",\n  379  							    JOptionPane.ERROR_MESSAGE );	\n  380  					}\n  ...\n  405  						JOptionPane.showMessageDialog( this, \n  406  								\"Please select an image file\", \n  407: 								\"Filename and path missing\",\n  408  							    JOptionPane.ERROR_MESSAGE );	\n  409  					}\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/playlist/PlaylistManager.java:\n   60  		\n   61  		String defaultPlaylistFile = \n   62: 				props.get( \"playlist.defaultfilename\", \"playlist.xml\" );\n   63  		\n   64  		String playlistFile = \n   65: 				props.get( \"playlist.currentfilename\", defaultPlaylistFile );\n   66  		\n   67  		load( playlistFolder.resolve( playlistFile ) );\n   ..\n   77  		Path playlistPath = props.getApplicationFolder( \"playlist\" );\n   78  		\n   79: 		String playlistDefault = props.get( \"playlist.defaultfilename\", \n   80  										 \"playlist.xml\" );\n   81  \n   82: 		String playlistCurrent = props.get( \"playlist.currentfilename\", \n   83  										 playlistDefault );\n   84  		\n   ..\n  144  	\n  145  	/**\n  146: 	 * Erases current playlist and loads playlist from the playlistPath filename,\n  147  	 * if it exists.\n  148  	 */\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/properties/SystemProperties.java:\n   39  {\n   40  	private static String sDEFAULT_APP_ROOT = \"SDRTrunk\";\n   41: 	private static String sPROPERTIES_FILENAME = \"SDRTrunk.properties\";\n   42  	\n   43  	private static SystemProperties mInstance;\n   ..\n   71  	{\n   72  		Path propsPath = \n   73: 				getApplicationRootPath().resolve( sPROPERTIES_FILENAME );\n   74  \n   75  		OutputStream out = null;\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/record/Recorder.java:\n   28  	}\n   29  	\n   30: 	public String getFileName()\n   31  	{\n   32  		return \"No Recording\";\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/record/RecorderManager.java:\n   41  		/* Note: the file suffix (ie .wav) gets added by the recorder */\n   42  \n   43:     	//Get the base recording filename\n   44          StringBuilder sb = new StringBuilder();\n   45          sb.append( SystemProperties.getInstance()\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/record/wave/BooleanWaveRecorder.java:\n   40      private boolean mPaused = false;\n   41      private WaveWriter mWriter;\n   42:     private String mFileName;\n   43      private BufferProcessor mBufferProcessor;\n   44  \n   ..\n   48  	private FloatSampleBufferAssembler mCurrentBuffer;\n   49  	\n   50: 	public BooleanWaveRecorder( int sampleRate, String filename )\n   51  	{\n   52  		super( RecorderType.AUDIO );\n   ..\n   60  		mCurrentBuffer = new FloatSampleBufferAssembler( sampleRate );\n   61  				\n   62: 		mFileName = filename;\n   63  	}\n   64  	\n   65  	@Override\n   66: 	public String getFileName()\n   67  	{\n   68: 		return mFileName + \".wav\";\n   69  	}\n   70  \n   ..\n   73  		if( !mRunning )\n   74  		{\n   75: 			mWriter = new WaveWriter( mFileName + \".wav\", mAudioFormat );\n   76  			mWriter.start();\n   77  			\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/record/wave/ComplexWaveRecorder.java:\n   42      private boolean mPaused = false;\n   43      private WaveWriter mWriter;\n   44:     private String mFileName;\n   45      private BufferProcessor mBufferProcessor;\n   46  \n   ..\n   50  	private ComplexSampleBufferAssembler mCurrentBuffer;\n   51  	\n   52: 	public ComplexWaveRecorder( int sampleRate, String filename )\n   53  	{\n   54  		super( RecorderType.AUDIO );\n   ..\n   62  		mCurrentBuffer = new ComplexSampleBufferAssembler( sampleRate );\n   63  				\n   64: 		mFileName = filename;\n   65  	}\n   66  \n   67  	@Override\n   68: 	public String getFileName()\n   69  	{\n   70: 		return mFileName + \".wav\";\n   71  	}\n   72  	\n   ..\n   75  		if( !mRunning )\n   76  		{\n   77: 			mWriter = new WaveWriter( mFileName + \".wav\", mAudioFormat );\n   78  			mWriter.start();\n   79  			\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/record/wave/FloatWaveRecorder.java:\n   40      private boolean mPaused = false;\n   41      private WaveWriter mWriter;\n   42:     private String mFileName;\n   43      private BufferProcessor mBufferProcessor;\n   44  \n   ..\n   48  	private FloatSampleBufferAssembler mCurrentBuffer;\n   49  	\n   50: 	public FloatWaveRecorder( int sampleRate, String filename )\n   51  	{\n   52  		super( RecorderType.AUDIO );\n   ..\n   60  		mCurrentBuffer = new FloatSampleBufferAssembler( sampleRate );\n   61  				\n   62: 		mFileName = filename;\n   63  	}\n   64  	\n   65  	@Override\n   66: 	public String getFileName()\n   67  	{\n   68: 		return mFileName + \".wav\";\n   69  	}\n   70  \n   ..\n   73  		if( !mRunning )\n   74  		{\n   75: 			mWriter = new WaveWriter( mFileName + \".wav\", mAudioFormat );\n   76  			mWriter.start();\n   77  			\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/record/wave/WaveRecorder.java:\n   38      private boolean mPaused = false;\n   39      private WaveWriter mWriter;\n   40:     private String mFileName;\n   41      private BufferProcessor mBufferProcessor;\n   42  \n   ..\n   45  								new LinkedBlockingQueue<ByteBuffer>( 512 );\n   46  \n   47: 	public WaveRecorder( AudioFormat format, String filename )\n   48  	{\n   49  		super( RecorderType.AUDIO );\n   50  		\n   51  		mAudioFormat = format;\n   52: 		mFileName = filename;\n   53  	}\n   54  	\n   ..\n   57  		if( !mRunning )\n   58  		{\n   59: 			mWriter = new WaveWriter( mFileName + \".wav\", mAudioFormat );\n   60  			mWriter.start();\n   61  			\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/settings/SettingsManager.java:\n   85  		\n   86  		String defaultSettingsFile = \n   87: 				props.get( \"settings.defaultFilename\", \"settings.xml\" );\n   88  		\n   89  		String settingsFile = \n   90: 				props.get( \"settings.currentFilename\", defaultSettingsFile );\n   91  		\n   92  		load( settingsFolder.resolve( settingsFile ) );\n   ..\n  634  		Path settingsPath = props.getApplicationFolder( \"settings\" );\n  635  		\n  636: 		String settingsDefault = props.get( \"settings.defaultFilename\", \n  637  										 \"settings.xml\" );\n  638  \n  639: 		String settingsCurrent = props.get( \"settings.currentFilename\", \n  640  										 settingsDefault );\n  641  		\n  ...\n  701  	\n  702  	/**\n  703: 	 * Erases current settings and loads settings from the settingsPath filename,\n  704  	 * if it exists.\n  705  	 */\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/source/config/SourceConfigFile.java:\n   29  \n   30  	private long mFrequency = 0;\n   31: 	private String mFilename;\n   32  	\n   33  	public SourceConfigFile()\n   ..\n   47  	}\n   48  	\n   49: 	@XmlAttribute( name = \"filename\" )\n   50: 	public String getFilename()\n   51  	{\n   52: 		return mFilename;\n   53  	}\n   54  	\n   55: 	public void setFilename(String filename)\n   56  	{\n   57: 		mFilename = filename;\n   58  	}\n   59  \n\n/home/tweaver/workspace/sdrtrunk-read-only/src/source/wave/ComplexWaveSource.java:\n   69       * @param loop - true for looping\n   70       * \n   71:      * @throws FileNotFoundException if filename is not found\n   72       */\n   73      public ComplexWaveSource( File file, boolean loop ) throws IOException \n\n/home/tweaver/workspace/sdrtrunk-read-only/src/source/wave/FloatWaveSource.java:\n   63       * by the manual or automatic methods.\n   64       * \n   65:      * @param filename - wave filename\n   66       * \n   67       * @param loop - true for looping\n   68       * \n   69:      * @throws FileNotFoundException if filename is not found\n   70       */\n   71      public FloatWaveSource( File file, boolean loop ) throws IOException \n\n/home/tweaver/workspace/sdrtrunk-read-only/src/util/waveaudio/WavFile.java:\n  812  		if (args.length < 1)\n  813  		{\n  814: 			System.err.println(\"Must supply filename\");\n  815  			System.exit(1);\n  816  		}\n  ...\n  818  		try\n  819  		{\n  820: 			for (String filename : args)\n  821  			{\n  822: 				WavFile readWavFile = openWavFile(new File(filename));\n  823  				readWavFile.display();\n  824  \n\n/home/tweaver/workspace/sdrtrunk-read-only/src/util/waveaudio/WaveWriter.java:\n   34  	private boolean mRunning = false;\n   35  	private AudioFormat mAudioFormat;\n   36: 	private String mFileName;\n   37  	private int mTotalByteCount = 0;\n   38  	private int mFileRolloverCounter = 0;\n   39  	\n   40: 	public WaveWriter( String fileName, AudioFormat format )\n   41  	{\n   42  		mAudioFormat = format;\n   43: 		mFileName = fileName;\n   44  	}\n   45  	\n   ..\n   96  		mOutputStream.close();\n   97  		\n   98: 		String filename = mFileName;\n   99  \n  100: 		//If this is a rollover file, append the rollover count to the filename\n  101  		if( mFileRolloverCounter > 0 )\n  102  		{\n  103: 			filename += mFileRolloverCounter;\n  104  		}\n  105  		\n  106  		//Correct the total count.  Subtract 8 bytes from the total, to account\n  107  		//for the ChunkID and ChunkSize bytes, at the beginning of the file\n  108: 		correctWAVEFileByteCount( filename, ( mTotalByteCount ) );\n  109  	}\n  110  \n  111: 	private void correctWAVEFileByteCount( String fileName, int newByteCount ) throws IOException\n  112  	{\n  113: 		RandomAccessFile raf = new RandomAccessFile( fileName, \"rw\" );\n  114  \n  115  		//Get byte array for newByteCount minus header (8 bytes)\n  ...\n  130  \n  131  		//debug\n  132: 		Log.info( \"Closing recording [\" + mFileName + \"] amending file byte size to:\" + newByteCount );\n  133  		\n  134  		raf.close();\n  ...\n  139  		mTotalByteCount = 0;\n  140  		\n  141: 		String filename = mFileName;\n  142  		\n  143  		if( mFileRolloverCounter > 0 )\n  144  		{\n  145: 			filename += mFileRolloverCounter;\n  146  		}\n  147  		\n  148:         mOutputStream = new BufferedOutputStream( new FileOutputStream( filename ) );\n  149          \n  150          //Write the RIFF descriptor\n\n112 matches across 21 files\n\n\nSearching 474 files for \"tree\"\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/alias/AliasEditor.java:\n   31  import javax.swing.JPanel;\n   32  import javax.swing.JTextField;\n   33: import javax.swing.tree.TreePath;\n   34  \n   35  import map.MapIcon;\n   ..\n  157  			if( alias != null )\n  158  			{\n  159: 				boolean expanded = mAliasNode.getModel().getTree()\n  160: 						.isExpanded( new TreePath( mAliasNode ) );\n  161  \n  162  				mAliasNode.getAlias().setName( alias );\n  ...\n  179  				if( expanded )\n  180  				{\n  181: 					mAliasNode.getModel().getTree()\n  182: 						.expandPath( new TreePath( mAliasNode ) );\n  183  				}\n  184  			}\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/alias/AliasListNode.java:\n  104              public void actionPerformed( ActionEvent e )\n  105              {\n  106: 				int n = JOptionPane.showConfirmDialog( getModel().getTree(),\n  107  				    \"Are you sure you want to permanently delete this node?\" );				\n  108  				\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/alias/AliasNode.java:\n  351              public void actionPerformed( ActionEvent e )\n  352              {\n  353: 				int n = JOptionPane.showConfirmDialog( getModel().getTree(),\n  354  				    \"Are you sure you want to permanently delete this node?\" );				\n  355  				\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/alias/GroupEditor.java:\n   27  import javax.swing.JPanel;\n   28  import javax.swing.JTextField;\n   29: import javax.swing.tree.TreePath;\n   30  \n   31  import net.miginfocom.swing.MigLayout;\n   ..\n   79  			if( group != null )\n   80  			{\n   81: 				boolean expanded = mGroupNode.getModel().getTree()\n   82: 						.isExpanded( new TreePath( mGroupNode ) );\n   83  \n   84  				mGroupNode.getGroup().setName( group );\n   ..\n   92  				if( expanded )\n   93  				{\n   94: 					mGroupNode.getModel().getTree()\n   95: 						.expandPath( new TreePath( mGroupNode ) );\n   96  				}\n   97  			}\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/alias/GroupNode.java:\n  104              public void actionPerformed( ActionEvent e )\n  105              {\n  106: 				int n = JOptionPane.showConfirmDialog( getModel().getTree(),\n  107  				    \"Are you sure you want to permanently delete this node?\" );				\n  108  				\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/alias/ListEditor.java:\n   27  import javax.swing.JPanel;\n   28  import javax.swing.JTextField;\n   29: import javax.swing.tree.TreePath;\n   30  \n   31  import net.miginfocom.swing.MigLayout;\n   ..\n   79  			if( group != null )\n   80  			{\n   81: 				boolean expanded = mListNode.getModel().getTree()\n   82: 						.isExpanded( new TreePath( mListNode ) );\n   83  \n   84  				mListNode.getList().setName( group );\n   ..\n   90  				if( expanded )\n   91  				{\n   92: 					mListNode.getModel().getTree().expandPath( new TreePath( mListNode ) );\n   93  				}\n   94  			}\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/alias/esn/ESNNode.java:\n   64              public void actionPerformed( ActionEvent e )\n   65              {\n   66: 				int n = JOptionPane.showConfirmDialog( getModel().getTree(),\n   67  				    \"Are you sure you want to permanently delete this node?\" );				\n   68  				\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/alias/fleetsync/FleetsyncIDNode.java:\n   75              public void actionPerformed( ActionEvent e )\n   76              {\n   77: 				int n = JOptionPane.showConfirmDialog( getModel().getTree(),\n   78  				    \"Are you sure you want to permanently delete this node?\" );				\n   79  				\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/alias/fleetsync/StatusIDNode.java:\n   64              public void actionPerformed( ActionEvent e )\n   65              {\n   66: 				int n = JOptionPane.showConfirmDialog( getModel().getTree(),\n   67  				    \"Are you sure you want to permanently delete this node?\" );				\n   68  				\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/alias/mdc/MDC1200IDNode.java:\n   69              public void actionPerformed( ActionEvent e )\n   70              {\n   71: 				int n = JOptionPane.showConfirmDialog( getModel().getTree(),\n   72  				    \"Are you sure you want to permanently delete this node?\" );				\n   73  				\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/alias/mobileID/MINNode.java:\n   64              public void actionPerformed( ActionEvent e )\n   65              {\n   66: 				int n = JOptionPane.showConfirmDialog( getModel().getTree(),\n   67  				    \"Are you sure you want to permanently delete this node?\" );				\n   68  				\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/alias/mpt1327/MPT1327IDNode.java:\n   69              public void actionPerformed( ActionEvent e )\n   70              {\n   71: 				int n = JOptionPane.showConfirmDialog( getModel().getTree(),\n   72  				    \"Are you sure you want to permanently delete this node?\" );				\n   73  				\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/alias/siteID/SiteIDNode.java:\n   64              public void actionPerformed( ActionEvent e )\n   65              {\n   66: 				int n = JOptionPane.showConfirmDialog( getModel().getTree(),\n   67  				    \"Are you sure you want to permanently delete this node?\" );				\n   68  				\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/alias/talkgroup/TalkgroupIDNode.java:\n   64              public void actionPerformed( ActionEvent e )\n   65              {\n   66: 				int n = JOptionPane.showConfirmDialog( getModel().getTree(),\n   67  				    \"Are you sure you want to permanently delete this node?\" );				\n   68  				\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/alias/uniqueID/UniqueIDNode.java:\n   64              public void actionPerformed( ActionEvent e )\n   65              {\n   66: 				int n = JOptionPane.showConfirmDialog( getModel().getTree(),\n   67  				    \"Are you sure you want to permanently delete this node?\" );				\n   68  				\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/controller/BaseNode.java:\n   24  import javax.swing.JPanel;\n   25  import javax.swing.JPopupMenu;\n   26: import javax.swing.tree.DefaultMutableTreeNode;\n   27: import javax.swing.tree.TreeNode;\n   28  \n   29: public class BaseNode extends DefaultMutableTreeNode\n   30                                implements Comparable<BaseNode>\n   31  {\n   ..\n   33  \n   34      /**\n   35:      * Model backing the JTree and nodes.  Since we're primarily interacting\n   36:      * with the model via JTree tree nodes via context menus, injecting a \n   37       * reference to the model facilitates nodal access to the model's methods\n   38       */\n   ..\n   41      /**\n   42       * Implements a base node that has a reference to the underlying\n   43:      * tree data model to facilitate tree node operations from nodal context \n   44       * menus.\n   45       */\n   ..\n   86      /**\n   87       * This method only needs to be called once on the root node and all nodes\n   88:      * in the tree will then have a reference to the model via getModel()\n   89       */\n   90      public void setModel( ConfigurationControllerModel model )\n   ..\n   94      \n   95      /**\n   96:      * Returns reference to the SystemTreeModel.  Only ConfigurableNode types\n   97:      * or children are allowed in this tree, so this method assumes that the \n   98       * node or parent is of ConfigurableNode class or subclass.\n   99       * \n  ...\n  105      	if( mModel == null )\n  106      	{\n  107:     		TreeNode parent = getParent();\n  108      		\n  109      		if( parent != null )\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/controller/ConfigurationControllerModel.java:\n   23  import java.util.List;\n   24  \n   25: import javax.swing.JTree;\n   26: import javax.swing.tree.DefaultMutableTreeNode;\n   27: import javax.swing.tree.DefaultTreeModel;\n   28: import javax.swing.tree.MutableTreeNode;\n   29: import javax.swing.tree.TreePath;\n   30  \n   31  import map.IconManager;\n   ..\n   46  import decode.config.DecodeConfigFactory;\n   47  \n   48: public class ConfigurationControllerModel extends DefaultTreeModel\n   49  {\n   50      private static final long serialVersionUID = 1L;\n   51      \n   52:     private JTree mTree;\n   53  \n   54      private ResourceManager mResourceManager;\n   ..\n   68  \n   69  	/**\n   70: 	 * Implements a merged system controller and (tree) model.  The user will \n   71: 	 * primarily interact with the system nodes via the tree view, so from a \n   72  	 * design perspective, the model and the control are necessarily merged to\n   73: 	 * work well with the JTree as the system view.\n   74  	 */\n   75  	public ConfigurationControllerModel( ResourceManager resourceManager )\n   ..\n   81      	/**\n   82      	 * Give the root node a reference to this model, so that all nodes can\n   83:     	 * invoke add/delete operations on the tree via context menu\n   84      	 */\n   85      	((BaseNode)getRoot()).setModel( this );\n   86      }\n   87  	\n   88: 	public JTree getTree()\n   89  	{\n   90: 		return mTree;\n   91  	}\n   92  	\n   ..\n   95  		if( mIconManagerFrame == null )\n   96  		{\n   97: 			mIconManagerFrame = new IconManager( mResourceManager, mTree );\n   98  			\n   99  			mResourceManager.getSettingsManager().addListener( mIconManagerFrame );\n  ...\n  118      	 */\n  119      	mTunerGroupNode = new TunerGroupNode();\n  120:     	insertNodeInto( mTunerGroupNode, (MutableTreeNode)root, 0 );\n  121      	addTuners( mTunerGroupNode );\n  122      	\n  ...\n  125  		 */\n  126      	mPlaylistNode = new PlaylistNode();\n  127:     	insertNodeInto( mPlaylistNode, (MutableTreeNode)root, 1 );\n  128      	mPlaylistNode.loadPlaylist();\n  129  	}\n  130  	\n  131: 	public void showNode( DefaultMutableTreeNode node )\n  132  	{\n  133:     	if( mTree != null && node != null )\n  134      	{\n  135:     		mTree.setSelectionPath( new TreePath( node.getPath() ) );\n  136      	}\n  137  	}\n  ...\n  142  	}\n  143  	\n  144: 	public void setTree( JTree tree )\n  145  	{\n  146: 		mTree = tree;\n  147  	}\n  148  	\n  ...\n  166      /**\n  167       * Convenience method to add a new default system, site and channel to \n  168:      * the tree\n  169       */\n  170      public void createChannel( long frequency, DecoderType decoder )\n  ...\n  207      private void show( BaseNode node )\n  208      {\n  209:     	if( mTree != null )\n  210      	{\n  211:     		mTree.scrollPathToVisible( new TreePath( node.getPath() ) );\n  212      	}\n  213      }\n  ...\n  238      \n  239      /**\n  240:      * Fires a tuner selection event for the first tuner listed in the tree.\n  241       * This is mainly used on application startup to show the spectral display\n  242       * of the first tuner in the spectrum panel.\n  ...\n  257      }\n  258      \n  259:     private ArrayList<Channel> getChannelConfigs( DefaultMutableTreeNode parent )\n  260      {\n  261      	ArrayList<Channel> configs = new ArrayList<Channel>();\n  262  \n  263:     	Enumeration<DefaultMutableTreeNode> nodes = parent.children();\n  264      	\n  265      	while( nodes.hasMoreElements() )\n  266      	{\n  267:     		DefaultMutableTreeNode node = nodes.nextElement();\n  268      		\n  269      		if( node instanceof ChannelNode )\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/controller/ConfigurationEditor.java:\n   24  import javax.swing.JPanel;\n   25  import javax.swing.JScrollPane;\n   26: import javax.swing.JTree;\n   27: import javax.swing.event.TreeSelectionEvent;\n   28: import javax.swing.event.TreeSelectionListener;\n   29  \n   30  public class ConfigurationEditor extends JPanel \n   31: 											implements TreeSelectionListener\n   32  {\n   33      private static final long serialVersionUID = 1L;\n   ..\n   61  \n   62  	@Override\n   63:     public void valueChanged( TreeSelectionEvent e )\n   64      {\n   65: 		JTree tree = (JTree)e.getSource();\n   66  		\n   67  		BaseNode node = \n   68: 				(BaseNode)tree.getLastSelectedPathComponent();\n   69  \n   70      	if( node != null )\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/controller/ConfigurationTreePanel.java:\n   24  import javax.swing.JPopupMenu;\n   25  import javax.swing.JScrollPane;\n   26: import javax.swing.JTree;\n   27  import javax.swing.SwingUtilities;\n   28: import javax.swing.event.TreeSelectionListener;\n   29: import javax.swing.tree.TreeSelectionModel;\n   30  \n   31  import net.miginfocom.swing.MigLayout;\n   32  \n   33: public class ConfigurationTreePanel extends JPanel\n   34  {\n   35  	private static final long serialVersionUID = 1L;\n   36  \n   37: 	protected JTree mSystemTree;\n   38: 	protected ConfigurationControllerModel mTreeModel;\n   39  	\n   40: 	public ConfigurationTreePanel( ConfigurationControllerModel model )\n   41  	{\n   42:     	mTreeModel = model;\n   43  \n   44      	initGUI();\n   ..\n   49      	setLayout( new MigLayout( \"insets 0 0 0 0\", \"[grow,fill]\", \"[grow,fill][]\") );\n   50  \n   51: 		mSystemTree = new JTree( mTreeModel );\n   52: 		mSystemTree.getSelectionModel().setSelectionMode( \n   53: 				TreeSelectionModel.SINGLE_TREE_SELECTION );\n   54: 		mSystemTree.setShowsRootHandles( true );\n   55: 		mSystemTree.addMouseListener( new Handler() );\n   56: 		mSystemTree.setCellRenderer( new ControllerTreeCellRenderer() );\n   57  \n   58: 		//Give the model a reference to the tree, so that it can force newly\n   59  		//added nodes to be displayed\n   60: 		mTreeModel.setTree( mSystemTree );\n   61  \n   62: 		JScrollPane treeScroll = new JScrollPane( mSystemTree );\n   63:     	add( treeScroll, \"cell 0 0,span,grow\" );\n   64  	}\n   65  	\n   66: 	public void addTreeSelectionListener( TreeSelectionListener listener )\n   67  	{\n   68: 		mSystemTree.addTreeSelectionListener( listener );\n   69  	}\n   70  	\n   ..\n   80  			if( SwingUtilities.isRightMouseButton( event ) )\n   81  			{\n   82: 				int row = mSystemTree.getRowForLocation( event.getX(), \n   83  						 								 event.getY() );\n   84  				\n   85  				if( row != -1 )\n   86  				{\n   87: 					mSystemTree.setSelectionRow( row );\n   88  					\n   89  					Object selectedNode = \n   90: 							mSystemTree.getLastSelectedPathComponent();\n   91  					\n   92  					if( selectedNode instanceof BaseNode )\n   ..\n   97  						if( contextMenu != null )\n   98  						{\n   99: 							contextMenu.show( mSystemTree, \n  100  											  event.getX(), \n  101  											  event.getY() );\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/controller/ControllerPanel.java:\n   50      private JideTabbedPane mTabbedPane;\n   51  \n   52:     protected ConfigurationTreePanel mSystemControlViewPanel;\n   53  	protected ConfigurationEditor mConfigurationEditor;\n   54      protected JideSplitPane mSystemControlSplitPane;\n   ..\n   72      	mConfigurationEditor = new ConfigurationEditor();\n   73      	mSystemControlViewPanel = \n   74:     			new ConfigurationTreePanel( mResourceManager.getController() );\n   75:     	mSystemControlViewPanel.addTreeSelectionListener( mConfigurationEditor );\n   76  \n   77      	mSystemControlSplitPane = new JideSplitPane( JideSplitPane.HORIZONTAL_SPLIT );\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/controller/ControllerTreeCellRenderer.java:\n   23  \n   24  import javax.swing.ImageIcon;\n   25: import javax.swing.JTree;\n   26: import javax.swing.tree.DefaultTreeCellRenderer;\n   27  \n   28: public class ControllerTreeCellRenderer extends DefaultTreeCellRenderer\n   29  {\n   30      private static final long serialVersionUID = 1L;\n   ..\n   33      private HashMap<String,ImageIcon> mIcons = new HashMap<String,ImageIcon>();\n   34      \n   35:     public ControllerTreeCellRenderer()\n   36      {\n   37      }\n   38  \n   39      @Override\n   40:     public Component getTreeCellRendererComponent( JTree tree,\n   41      		Object value, boolean selected, boolean expanded, boolean isLeaf,\n   42      		int row, boolean focused )\n   43      {\n   44:     	Component c = super.getTreeCellRendererComponent( tree, value, selected, \n   45      			expanded, isLeaf, row, focused );\n   46      	\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/controller/EmptyEditor.java:\n   36  			+ \"<p>SDR Trunk</p>\"\n   37  			+ \"<br>\"\n   38: 			+ \"<p>Use the tree structure to the left to configure SDRTrunk\"\n   39  			+ \" to use multiple SDR tuners and sound card sources to\"\n   40  			+ \" decode multiple trunked and digital radio channels.</p>\"\n   41  			+ \"<br>\"\n   42: 			+ \"<p>Each tree branch can be accessed by clicking on the branch\"\n   43  			+ \" and a configuration editor will appear here.</p>\"\n   44  			+ \"<br>\"\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/controller/channel/Channel.java:\n  240  								\n  241  								new ActivitySummaryFrame( summary,\n  242: 									mResourceManager.getController().getTree() );\n  243  							}\n  244  						}\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/controller/channel/ChannelEditor.java:\n   32  import javax.swing.JLabel;\n   33  import javax.swing.JTextField;\n   34: import javax.swing.tree.DefaultTreeModel;\n   35: import javax.swing.tree.TreePath;\n   36  \n   37  import net.miginfocom.swing.MigLayout;\n   ..\n   50  {\n   51      private static final long serialVersionUID = 1L;\n   52:     private DefaultTreeModel mTreeModel;\n   53      private ChannelNode mChannelNode;\n   54      \n   ..\n  163  		}\n  164  \n  165: 		if( mTreeModel != null )\n  166  		{\n  167: 			mTreeModel.nodeChanged( mChannelNode );\n  168  		}\n  169      }\n  ...\n  172      public void save()\n  173      {\n  174: 		boolean expanded = mChannelNode.getModel().getTree()\n  175: 				.isExpanded( new TreePath( mChannelNode ) );\n  176  \n  177  		mSourceEditor.save();\n  ...\n  197  		if( expanded )\n  198  		{\n  199: 			mChannelNode.getModel().getTree().expandPath( new TreePath( mChannelNode ) );\n  200  		}\n  201      }\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/controller/site/SiteEditor.java:\n   27  import javax.swing.JPanel;\n   28  import javax.swing.JTextField;\n   29: import javax.swing.tree.TreePath;\n   30  \n   31  import net.miginfocom.swing.MigLayout;\n   ..\n   73  		if( command.contentEquals( \"Save\" ) )\n   74  		{\n   75: 			boolean expanded = mSiteNode.getModel().getTree()\n   76: 					.isExpanded( new TreePath( mSiteNode ) );\n   77  \n   78  			String name = mTextSite.getText();\n   ..\n   86  				if( expanded )\n   87  				{\n   88: 					mSiteNode.getModel().getTree().expandPath( new TreePath( mSiteNode ) );\n   89  				}\n   90  			}\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/controller/site/SiteNode.java:\n   27  import javax.swing.JPopupMenu;\n   28  import javax.swing.JSeparator;\n   29: import javax.swing.tree.DefaultMutableTreeNode;\n   30  \n   31  import controller.ConfigurableNode;\n   ..\n   63  \n   64      	@SuppressWarnings( \"unchecked\" )\n   65:         Enumeration<DefaultMutableTreeNode> nodes = children();\n   66  \n   67      	while( nodes.hasMoreElements() )\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/controller/system/SystemEditor.java:\n   27  import javax.swing.JPanel;\n   28  import javax.swing.JTextField;\n   29: import javax.swing.tree.TreePath;\n   30  \n   31  import net.miginfocom.swing.MigLayout;\n   ..\n   73  		if( command.contentEquals( \"Save\" ) )\n   74  		{\n   75: 			boolean expanded = mSystemNode.getModel().getTree()\n   76: 					.isExpanded( new TreePath( mSystemNode ) );\n   77  			\n   78  			String name = mTextSystem.getText();\n   ..\n   86  				if( expanded )\n   87  				{\n   88: 					mSystemNode.getModel().getTree().expandPath( new TreePath( mSystemNode ) );\n   89  				}\n   90  			}\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/controller/system/SystemNode.java:\n   27  import javax.swing.JPopupMenu;\n   28  import javax.swing.JSeparator;\n   29: import javax.swing.tree.DefaultMutableTreeNode;\n   30  \n   31  import controller.ConfigurableNode;\n   ..\n   62  \n   63      	@SuppressWarnings( \"unchecked\" )\n   64:         Enumeration<DefaultMutableTreeNode> nodes = children();\n   65  \n   66      	while( nodes.hasMoreElements() )\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/decode/fleetsync2/FleetsyncActivitySummary.java:\n   19  \n   20  import java.util.Iterator;\n   21: import java.util.TreeSet;\n   22  \n   23  import message.Message;\n   ..\n   31  {\n   32  	private AliasList mAliasList;\n   33: 	private TreeSet<String> mIdents = new TreeSet<String>();\n   34: 	private TreeSet<String> mEmergencyIdents = new TreeSet<String>();\n   35  \n   36  	/**\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/decode/ltrnet/LTRNetActivitySummary.java:\n   22  import java.util.HashSet;\n   23  import java.util.Iterator;\n   24: import java.util.TreeSet;\n   25  \n   26  import message.Message;\n   ..\n   36  	private AliasList mAliasList;\n   37  	private HashSet<String> mTalkgroupsFirstHeard = new HashSet<String>();\n   38: 	private TreeSet<String> mTalkgroups = new TreeSet<String>();\n   39: 	private TreeSet<String> mESNs = new TreeSet<String>();\n   40: 	private TreeSet<Integer> mUniqueIDs = new TreeSet<Integer>();\n   41: 	private TreeSet<Integer> mNeighborIDs = new TreeSet<Integer>();\n   42: 	private TreeSet<Integer> mSiteIDs = new TreeSet<Integer>();\n   43  	private HashMap<Integer,Double> mReceiveFrequencies = \n   44  			new HashMap<Integer,Double>();\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/decode/ltrstandard/LTRStandardActivitySummary.java:\n   22  import java.util.HashSet;\n   23  import java.util.Iterator;\n   24: import java.util.TreeSet;\n   25  \n   26  import message.Message;\n   ..\n   38  	private AliasList mAliasList;\n   39  	private HashSet<String> mTalkgroupsFirstHeard = new HashSet<String>();\n   40: 	private TreeSet<String> mTalkgroups = new TreeSet<String>();\n   41: 	private TreeSet<Integer> mActiveLCNs = new TreeSet<Integer>();\n   42  	private int mMonitoredLCN;\n   43  \n\n/home/tweaver/workspace/sdrtrunk-read-only/src/decode/mdc1200/MDCActivitySummary.java:\n   19  \n   20  import java.util.Iterator;\n   21: import java.util.TreeSet;\n   22  \n   23  import message.Message;\n   ..\n   31  {\n   32  	private AliasList mAliasList;\n   33: 	private TreeSet<String> mIdents = new TreeSet<String>();\n   34: 	private TreeSet<String> mEmergencyIdents = new TreeSet<String>();\n   35  \n   36  	/**\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/decode/mpt1327/MPT1327ActivitySummary.java:\n   19  \n   20  import java.util.Iterator;\n   21: import java.util.TreeSet;\n   22  \n   23  import message.Message;\n   ..\n   33  \n   34  	private AliasList mAliasList;\n   35: 	private TreeSet<String> mIdents = new TreeSet<String>();\n   36  	private int mSite;\n   37  \n\n/home/tweaver/workspace/sdrtrunk-read-only/src/decode/passport/PassportActivitySummary.java:\n   24  import java.util.HashSet;\n   25  import java.util.Iterator;\n   26: import java.util.TreeSet;\n   27  \n   28  import message.Message;\n   ..\n   40  	private AliasList mAliasList;\n   41  	private HashSet<String> mTalkgroupsFirstHeard = new HashSet<String>();\n   42: 	private TreeSet<String> mTalkgroups = new TreeSet<String>();\n   43: 	private TreeSet<String> mMobileIDs = new TreeSet<String>();\n   44  	private HashMap<Integer,String> mSiteLCNs = new HashMap<Integer,String>(); \n   45  	private HashMap<Integer,String> mNeighborLCNs = new HashMap<Integer,String>(); \n\n/home/tweaver/workspace/sdrtrunk-read-only/src/dsp/filter/FilterFactory.java:\n   20  import java.util.Arrays;\n   21  import java.util.Set;\n   22: import java.util.TreeSet;\n   23  \n   24  import log.Log;\n   ..\n  578  	private static Set<Integer> getFactors( int value )\n  579  	{\n  580: 		Set<Integer> factors = new TreeSet<Integer>();\n  581  		\n  582  		/* Brute force */\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/map/PlottableEntity.java:\n   21  import java.util.Collections;\n   22  import java.util.Set;\n   23: import java.util.TreeSet;\n   24  \n   25  import org.jdesktop.swingx.mapviewer.GeoPosition;\n   ..\n   29  public class PlottableEntity implements Comparable<PlottableEntity>\n   30  {\n   31: 	private TreeSet<Plottable> mPlottables = new TreeSet<Plottable>();\n   32  \n   33  	private Alias mAlias;\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/org/jdesktop/swingx/JXMapKit.java:\n   70  	public enum DefaultProviders\n   71  	{\n   72: 		SwingLabsBlueMarble, OpenStreetMaps, Custom\n   73  	}\n   74  \n   ..\n  195  		});\n  196  \n  197: 		if (getDefaultProvider() == DefaultProviders.OpenStreetMaps)\n  198  		{\n  199  			setZoom(10);\n  ...\n  643  			setZoom(3);\n  644  		}\n  645: 		if (prov == DefaultProviders.OpenStreetMaps)\n  646  		{\n  647  			TileFactoryInfo info = new OSMTileFactoryInfo();\n  ...\n  702  			{\n  703  				JXMapKit kit = new JXMapKit();\n  704: 				kit.setDefaultProvider(DefaultProviders.OpenStreetMaps);\n  705  \n  706  				TileFactoryInfo info = new OSMTileFactoryInfo();\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/org/jdesktop/swingx/OSMTileFactoryInfo.java:\n   30  \n   31  /**\n   32:  * Uses OpenStreetMap\n   33   * @author Martin Dummer\n   34   */\n   ..\n   42  	public OSMTileFactoryInfo()\n   43  	{\n   44: 		super(\"OpenStreetMap\", \n   45  				1, max - 2, max, \n   46  				256, true, true, 					// tile size is 256 and x/y orientation is normal\n   47: 				\"http://tile.openstreetmap.org\",\n   48  				\"x\", \"y\", \"z\");						// 5/15/10.png\n   49  	}\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/org/jdesktop/swingx/mapviewer/esri/ESRITileFactory.java:\n   34  		super(new ESRITileProviderInfo());\n   35  		((ESRITileProviderInfo) super.getInfo()).factory = this;\n   36: 		datasource = \"ArcWeb:TA.Streets.NA\";\n   37  	}\n   38  \n\n/home/tweaver/workspace/sdrtrunk-read-only/src/util/ArcTangent.java:\n   36   * You should have received a copy of the GNU General Public License\n   37   * along with GNU Radio; see the file COPYING.  If not, write to\n   38:  * the Free Software Foundation, Inc., 51 Franklin Street,\n   39   * Boston, MA 02110-1301, USA.\n   40   */\n\n222 matches across 40 files\n\n\nSearching 475 files for \"New System\"\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/controller/ConfigurationControllerModel.java:\n  179      public void createChannel( long frequency, DecoderType decoder )\n  180      {\n  181:     	System system = new System();\n  182  \n  183      	Site site = new Site();\n  ...\n  195      	mPlaylistNode.getPlaylist().getSystemList().addSystem( system );\n  196      	\n  197:     	SystemNode systemNode = new SystemNode( system );\n  198      	SystemListNode systemListNode = mPlaylistNode.getSystemListNode();\n  199      	addNode( systemNode, systemListNode, systemListNode.getChildCount() );\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/controller/system/System.java:\n   35      public System()\n   36      {\n   37:         this( \"New System\" );\n   38      }\n   39      \n\n/home/tweaver/workspace/sdrtrunk-read-only/src/controller/system/SystemListNode.java:\n   44      	for( System system: getSystemList().getSystem() )\n   45      	{\n   46:     		SystemNode node = new SystemNode( system );\n   47      		\n   48      		getModel().addNode( node, SystemListNode.this, getChildCount() );\n   ..\n   69              public void actionPerformed( ActionEvent e )\n   70              {\n   71: 			    System system = new System();\n   72  \n   73  			    getSystemList().addSystem( system );\n   74  			    \n   75: 				getModel().addNode( new SystemNode( system ), \n   76  									SystemListNode.this, \n   77  									SystemListNode.this.getChildCount() );\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/controller/system/SystemNode.java:\n   84  	public JPanel getEditor()\n   85  	{\n   86: 	    return new SystemEditor( this );\n   87  	}\n   88  	\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/playlist/Playlist.java:\n   35  	private AliasDirectory mAliasDirectory = new AliasDirectory();\n   36  	private ChannelMapList mChannelMapList = new ChannelMapList();\n   37: 	private SystemList mSystemList = new SystemList();\n   38  	\n   39  	public Playlist()\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/playlist/PlaylistNode.java:\n   88      	if( list == null )\n   89      	{\n   90:     		list = new SystemList();\n   91      		getPlaylist().setSystemList( list );\n   92      	}\n   93      	\n   94:     	mSystemListNode = new SystemListNode( list );\n   95      	\n   96      	getModel().insertNodeInto( mSystemListNode, this, 2 );\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/properties/SystemProperties.java:\n   59  		if( mInstance == null )\n   60  		{\n   61: 			mInstance = new SystemProperties();\n   62  		}\n   63  		\n\n11 matches across 7 files\n\n\nSearching 475 files for \"Name:\"\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/alias/AliasEditor.java:\n   69  		setBorder( BorderFactory.createTitledBorder( \"Alias\" ) );\n   70  \n   71: 		mLabelName = new JLabel( \"Name:\" );\n   72  		add( mLabelName, \"align right\" );\n   73  		\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/alias/GroupEditor.java:\n   53  		setBorder( BorderFactory.createTitledBorder( \"Group\" ) );\n   54  \n   55: 		mLabelName = new JLabel( \"Name:\" );\n   56  		add( mLabelName, \"align right\" );\n   57  		\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/alias/ListEditor.java:\n   53  		setBorder( BorderFactory.createTitledBorder( \"List\" ) );\n   54  \n   55: 		mLabelName = new JLabel( \"Name:\" );\n   56  		add( mLabelName, \"align right\" );\n   57  		\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/controller/channel/ChannelEditor.java:\n   85  		add( mChannelEnabled );\n   86  \n   87: 		add( new JLabel( \"Name:\" ) );\n   88  \n   89  		mChannelName = new JTextField( mChannelNode.getChannel().getName() );\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/controller/channel/ChannelMapEditor.java:\n   66  		add( new JLabel( \"Channel Map\" ), \"span, align center\" );\n   67  		\n   68: 		mNameLabel = new JLabel( \"Name:\" );\n   69  		add( mNameLabel );\n   70  		\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/controller/channel/ChannelNode.java:\n   81  			case CHANGE_DECODER:\n   82  			case CHANGE_ENABLED:\n   83: 			case CHANGE_NAME:\n   84  			case CHANGE_SELECTED:\n   85  			case CHANGE_SITE:\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/controller/site/SiteEditor.java:\n   51  		setBorder( BorderFactory.createTitledBorder( \"Site\" ) );\n   52  \n   53: 		mLabelName = new JLabel( \"Name:\" );\n   54  		add( mLabelName, \"align right\" );\n   55  		\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/controller/system/SystemEditor.java:\n   51  		setBorder( BorderFactory.createTitledBorder( \"System\" ) );\n   52  \n   53: 		mLabelSystem = new JLabel( \"Name:\" );\n   54  		add( mLabelSystem, \"align right\" );\n   55  		\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/decode/ltrnet/LTRNetPanel.java:\n  118  			    				.getSourceConfiguration().getDescription() );\n  119  						break;\n  120: 					case CHANNEL_NAME:\n  121: 					case SITE_NAME:\n  122: 					case SYSTEM_NAME:\n  123  				    	mChannelLabel.setText( mChannel.getChannelDisplayName() );\n  124  				    	break;\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/decode/ltrstandard/LTRPanel.java:\n  153  	    	    				.getSourceConfiguration().getDescription() );\n  154  	                	break;\n  155: 	                case CHANNEL_NAME:\n  156: 	                case SITE_NAME:\n  157: 	                case SYSTEM_NAME:\n  158  	    		    	mChannelLabel.setText( mChannel.getChannelDisplayName() );\n  159  	    		    	break;\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/decode/nbfm/NBFMPanel.java:\n   88  			    				.getDescription() );\n   89  						break;\n   90: 					case CHANNEL_NAME:\n   91: 					case SITE_NAME:\n   92: 					case SYSTEM_NAME:\n   93  				    	mChannelLabel.setText( mChannel.getChannelDisplayName() );\n   94  						break;\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/decode/passport/PassportPanel.java:\n  130  			    				.getDescription() );\n  131  						break;\n  132: 					case CHANNEL_NAME:\n  133: 					case SITE_NAME:\n  134: 					case SYSTEM_NAME:\n  135  				    	mChannelLabel.setText( mChannel.getChannelDisplayName() );\n  136  				    	break;\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/map/IconManager.java:\n  104  		editorPanel.add( mIconPath, \"grow,wrap\" );\n  105  \n  106: 		editorPanel.add( new JLabel( \"Name:\" ), \"align right\" );\n  107  		\n  108  		mIconName = new JTextField();\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/source/mixer/MixerManager.java:\n  224  		{\n  225  			sb.append( \"\\n--------------------------------------------------\" );\n  226: 			sb.append( \"\\nMIXER name:\" + mixerInfo.getName() + \n  227  					   \"\\n      desc:\" + mixerInfo.getDescription() +\n  228  					   \"\\n      vendor:\" + mixerInfo.getVendor() +\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/source/mixer/SystemMixerDevices.java:\n   83  		{\n   84  			sb.append( \"\\n--------------------------------------------------\" );\n   85: 			sb.append( \"\\nMIXER name:\" + mixerInfo.getName() + \n   86  					   \"\\n      desc:\" + mixerInfo.getDescription() +\n   87  					   \"\\n      vendor:\" + mixerInfo.getVendor() +\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/source/tuner/fcd/proV1/FCD1TunerConfigurationPanel.java:\n  140  		} );\n  141  		\n  142: 		add( new JLabel( \"Name:\" ) );\n  143  		add( mName, \"growx,push\" );\n  144  		\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/source/tuner/rtl/e4k/E4KTunerConfigurationPanel.java:\n  150  		 * Tuner Configuration Name\n  151  		 */\n  152: 		add( new JLabel( \"Name:\" ) );\n  153  		mName = new JTextField();\n  154  		mName.setText( mSelectedConfig.getName() );\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/source/tuner/rtl/r820t/R820TTunerConfigurationPanel.java:\n  165  		} );\n  166  		\n  167: 		add( new JLabel( \"Name:\" ) );\n  168  		add( mName, \"growx,push\" );\n  169  		\n\n26 matches across 18 files\n\n\nSearching 477 files for \"SystemNode(\"\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/controller/ConfigurationControllerModel.java:\n  195      	mPlaylistNode.getPlaylist().getSystemList().addSystem( system );\n  196      	\n  197:     	SystemNode systemNode = new SystemNode( system );\n  198      	SystemListNode systemListNode = mPlaylistNode.getSystemListNode();\n  199      	addNode( systemNode, systemListNode, systemListNode.getChildCount() );\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/controller/system/SystemListNode.java:\n   44      	for( System system: getSystemList().getSystem() )\n   45      	{\n   46:     		SystemNode node = new SystemNode( system );\n   47      		\n   48      		getModel().addNode( node, SystemListNode.this, getChildCount() );\n   ..\n   73  			    getSystemList().addSystem( system );\n   74  			    \n   75: 				getModel().addNode( new SystemNode( system ), \n   76  									SystemListNode.this, \n   77  									SystemListNode.this.getChildCount() );\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/controller/system/SystemNode.java:\n   37      private static final long serialVersionUID = 1L;\n   38  \n   39: 	public SystemNode( System system )\n   40  	{\n   41  		super( system );\n\n4 matches across 3 files\n\n\nSearching 477 files for \"SystemEditor(\"\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/controller/system/SystemEditor.java:\n   39      private JTextField mTextSystem;\n   40  \n   41: 	public SystemEditor( SystemNode system )\n   42  	{\n   43  		mSystemNode = system;\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/controller/system/SystemNode.java:\n   84  	public JPanel getEditor()\n   85  	{\n   86: 	    return new SystemEditor( this );\n   87  	}\n   88  	\n\n2 matches across 2 files\n\n\nSearching 477 files for \"addListener(\"\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/bits/MessageFramer.java:\n  130      public void addMessageListener( Listener<BitSetBuffer> listener )\n  131      {\n  132:         mBroadcaster.addListener( listener );\n  133      }\n  134      \n\n/home/tweaver/workspace/sdrtrunk-read-only/src/buffer/FloatToByteBufferAssembler.java:\n   39      public void addByteBufferListener( Listener<ByteBuffer> listener )\n   40      {\n   41: 		mBroadcaster.addListener( listener );\n   42      }\n   43  \n\n/home/tweaver/workspace/sdrtrunk-read-only/src/controller/ConfigurationControllerModel.java:\n  101  			mIconManagerFrame = new IconManager( mResourceManager, mTree );\n  102  			\n  103: 			mResourceManager.getSettingsManager().addListener( mIconManagerFrame );\n  104  		}\n  105  		\n  ...\n  223      }\n  224  \n  225:     public void addListener( TunerSelectionListener listener )\n  226      {\n  227      	mTunerSelectionListeners.add( listener );\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/controller/ControllerPanel.java:\n   93  \n   94      	/* Add Map Service as message listener to receive all messages */\n   95:     	mResourceManager.getChannelManager().addListener( \n   96      			(Listener<Message>)mResourceManager.getMapService() );\n   97      	\n   ..\n  105      	/* Add message activity panel to receive channel selection events so\n  106      	 * that we can display the correct message listings */\n  107:     	mResourceManager.getChannelManager().addListener( mMessageActivityPanel );\n  108  \n  109      	/* Add call event panel to receive channel selection events so\n  110      	 * that we can display the correct call event listings */\n  111:     	mResourceManager.getChannelManager().addListener( mCallEventPanel );\n  112  \n  113      	/* Register ChannelStateList as a listener on the channel manager to\n  114  		 * receive channel starts and stops and deletes */\n  115: 		mResourceManager.getChannelManager().addListener( mChannelStateList );\n  116  		\n  117  		JScrollPane channelStateListScroll = new JScrollPane();\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/controller/activity/CallEventModel.java:\n  164      }\n  165  	\n  166: 	public void addListener( Listener<CallEvent> listener )\n  167  	{\n  168: 		mBroadcaster.addListener( listener );\n  169  	}\n  170  	\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/controller/channel/Channel.java:\n  772  	 * and automatically sends the listener a channel add event.\n  773  	 */\n  774: 	public void addListener( ChannelListener listener )\n  775  	{\n  776  		if( !mChannelListeners.contains( listener ) )\n  ...\n  794  		for( ChannelListener listener: listeners )\n  795  		{\n  796: 			addListener( listener );\n  797  		}\n  798  	}\n  ...\n  806  	}\n  807  	\n  808: 	public void addListener( Listener<Message> listener )\n  809  	{\n  810  		mMessageListeners.add( listener );\n  ...\n  812  		if( isProcessing() )\n  813  		{\n  814: 			mProcessingChain.addListener( listener );\n  815  		}\n  816  	}\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/controller/channel/ChannelManager.java:\n   67  	 * a channel add event as it is added to each of the existing channels.\n   68  	 */\n   69: 	public void addListener( ChannelListener listener )\n   70  	{\n   71  	    mChannelListeners.add( listener );\n   ..\n   73  	    for( Channel channel: mChannels )\n   74  	    {\n   75: 	    	channel.addListener( listener );\n   76  	    }\n   77  	}\n   ..\n  113  	 * any messages.\n  114  	 */\n  115: 	public void addListener( Listener<Message> listener )\n  116  	{\n  117  	    mMessageListeners.add( listener );\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/controller/channel/ChannelNode.java:\n   63  		\n   64  		/* Add this node as listener to receive changes from underlying channel */\n   65: 		getChannel().addListener( this );\n   66  \n   67  		/* Add the resource manager to the channel so that the channel\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/controller/channel/ProcessingChain.java:\n  375  			{\n  376  				/* Register audio output to be controlled by the channel state */\n  377: 				mChannelState.addListener( (SquelchListener)mAudioOutput );\n  378  				mChannelState.setListener( (AudioTypeListener)mAudioOutput );\n  379  			}\n  ...\n  415  					\n  416  					getChannelState().getCallEventModel()\n  417: 						.addListener( (Listener<CallEvent>)logger );\n  418  				}\n  419  				else\n  ...\n  422  							.getLogger( this, type );\n  423  \n  424: 					addListener( (Listener<Message>)logger );\n  425  				}\n  426  				\n  ...\n  615      }\n  616  \n  617:     public void addListener( Listener<Message> listener )\n  618      {\n  619:     	mBroadcaster.addListener( listener );\n  620      }\n  621      \n  ...\n  624      	for( Listener<Message> listener: listeners )\n  625      	{\n  626:     		addListener( listener );\n  627      	}\n  628      }\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/controller/state/AuxChannelState.java:\n   61  	public abstract void reset();\n   62  \n   63: 	public void addListener( Listener<ChangedAttribute> listener )\n   64  	{\n   65: 		mChangeBroadcaster.addListener( listener );\n   66  	}\n   67  	\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/controller/state/AuxStatePanel.java:\n   57  \n   58      	/* Register to receive event updates */\n   59:     	mAuxChannelState.addListener( this );\n   60      	\n   61      	/* Register to receive settings updates */\n   62:     	mSettingsManager.addListener( this );\n   63      	\n   64      	getColors();\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/controller/state/ChannelState.java:\n  119  		\n  120  		/* Register to receive decoded messages from the processing chain */\n  121: 		mProcessingChain.addListener( this );\n  122  		\n  123  		SystemProperties props = SystemProperties.getInstance();\n  ...\n  385  	}\n  386  	\n  387: 	public void addListener( SquelchListener listener )\n  388  	{\n  389  		mSquelchListeners.add( listener );\n  ...\n  628  	 * Registers a listener to receive channel state attribute changes\n  629  	 */\n  630: 	public void addListener( Listener<ChangedAttribute> listener )\n  631  	{\n  632: 	    mChangeBroadcaster.addListener( listener );\n  633  	}\n  634  	\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/controller/state/ChannelStatePanel.java:\n   79  \n   80      	/* Register to receive settings updates */\n   81:     	getSettingsManager().addListener( this );\n   82      	\n   83      	/* Register to receive channel updates */\n   84:     	mChannel.getProcessingChain().getChannelState().addListener( this );\n   85  \n   86      	getColors();\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/decode/Decoder.java:\n   67  	{\n   68  		mAuxiliaryDecoders.add( decoder );\n   69: 		mFloatBroadcaster.addListener( decoder.getFloatReceiver() );\n   70  		decoder.addMessageListener( this );\n   71  	}\n   ..\n  119      public void addMessageListener( Listener<Message> listener )\n  120      {\n  121: 		mMessageBroadcaster.addListener( listener );\n  122      }\n  123  \n  ...\n  129      public void addFloatListener( Listener<Float> listener )\n  130      {\n  131: 		mFloatBroadcaster.addListener( listener );\n  132      }\n  133  \n  ...\n  139      public void addComplexListener( Listener<ComplexSample> listener )\n  140      {\n  141: 		mComplexBroadcaster.addListener( listener );\n  142      }\n  143  \n\n/home/tweaver/workspace/sdrtrunk-read-only/src/decode/fleetsync1/Fleetsync1MessageProcessor.java:\n   40      public void addMessageListener( Listener<Message> listener )\n   41      {\n   42: 		mBroadcaster.addListener( listener );\n   43      }\n   44  \n\n/home/tweaver/workspace/sdrtrunk-read-only/src/decode/fleetsync2/Fleetsync2MessageProcessor.java:\n   50      public void addMessageListener( Listener<Message> listener )\n   51      {\n   52: 		mBroadcaster.addListener( listener );\n   53      }\n   54  \n\n/home/tweaver/workspace/sdrtrunk-read-only/src/decode/ltrnet/LTRNetDecoder.java:\n   79  			 */\n   80  			mDCRemovalFilter = new DCRemovalFilter2( sDC_REMOVAL_RATIO );\n   81: 			mDemodulator.addListener( mDCRemovalFilter );\n   82  			\n   83  			mDCRemovalFilter.setListener( this.getFloatReceiver() );\n   ..\n   92  		if( mSourceSampleType == SampleType.COMPLEX )\n   93  		{\n   94: 			mDemodulator.addListener( mLTRFSKDecoder );\n   95  		}\n   96  		else\n   ..\n  112  		}\n  113  		\n  114: 		mLTRFSKDecoder.addListener( mLTRMessageFramer );\n  115  \n  116  		mLTRMessageProcessor = new LTRNetMessageProcessor( direction, aliasList );\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/decode/ltrnet/LTRNetMessageProcessor.java:\n  138      public void addMessageListener( Listener<Message> listener )\n  139      {\n  140: 		mBroadcaster.addListener( listener );\n  141      }\n  142  \n\n/home/tweaver/workspace/sdrtrunk-read-only/src/decode/ltrstandard/LTRPanel.java:\n   51  		super( channel );\n   52  		\n   53:         channel.getProcessingChain().getChannelState().addListener( this );\n   54  \n   55  		mSettingsManager = settingsManager;\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/decode/ltrstandard/LTRStandardDecoder.java:\n   71  			 */\n   72  			mDCRemovalFilter = new DCRemovalFilter2( sDC_REMOVAL_RATIO );\n   73: 			mDemodulator.addListener( mDCRemovalFilter );\n   74  			\n   75  			mDCRemovalFilter.setListener( this.getFloatReceiver() );\n   ..\n   84  		if( mSourceSampleType == SampleType.COMPLEX )\n   85  		{\n   86: 			mDemodulator.addListener( mLTRFSKDecoder );\n   87  		}\n   88  		else\n   ..\n  104  		}\n  105  		\n  106: 		mLTRFSKDecoder.addListener( mLTRMessageFramer );\n  107  \n  108  		mLTRMessageProcessor = new LTRStandardMessageProcessor( direction, aliasList );\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/decode/ltrstandard/LTRStandardMessageProcessor.java:\n   58      public void addMessageListener( Listener<Message> listener )\n   59      {\n   60: 		mBroadcaster.addListener( listener );\n   61      }\n   62  \n\n/home/tweaver/workspace/sdrtrunk-read-only/src/decode/mdc1200/MDCMessageProcessor.java:\n   68      public void addMessageListener( Listener<Message> listener )\n   69      {\n   70: 		mBroadcaster.addListener( listener );\n   71      }\n   72  \n\n/home/tweaver/workspace/sdrtrunk-read-only/src/decode/mpt1327/MPT1327ChannelState.java:\n  169  							 * traffic channel so we can receive call tear-down\n  170  							 * messages */\n  171: 							traffic.addListener( (Listener<Message>)this );\n  172  							\n  173  							CallEventType type = traffic.isProcessing() ? \n  ...\n  235       * Make the ConventionalChannelState always unsquelched\n  236       */\n  237:     public void addListener( SquelchListener listener )\n  238      {\n  239:         super.addListener( listener );\n  240          \n  241          super.setSquelchState( SquelchState.UNSQUELCH );\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/decode/mpt1327/MPT1327Decoder.java:\n  103  			if( mNBFMDemodulator != null )\n  104  			{\n  105: 				mNBFMDemodulator.addListener( mDCRemovalFilter );\n  106  				mDCRemovalFilter.setListener( this.getFloatReceiver() );\n  107  			}\n  ...\n  137          		new MessageFramer( SyncPattern.MPT1327_CONTROL.getPattern(), \n  138          						   sMESSAGE_LENGTH );\n  139:         mSymbolBroadcaster.addListener( mControlMessageFramer );\n  140  \n  141          /* Message framer for traffic channel massages */\n  ...\n  143          		new MessageFramer( SyncPattern.MPT1327_TRAFFIC.getPattern(), \n  144          								sMESSAGE_LENGTH );\n  145:         mSymbolBroadcaster.addListener( mTrafficMessageFramer );\n  146  \n  147          /* Fully decoded and framed messages processor */\n  ...\n  227  				if( mNBFMDemodulator != null )\n  228  				{\n  229: 					mNBFMDemodulator.addListener( inputTap );\n  230  				}\n  231  				else\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/decode/mpt1327/MPT1327MessageProcessor.java:\n   50      public void addMessageListener( Listener<Message> listener )\n   51      {\n   52:     	mBroadcaster.addListener( listener );\n   53      }\n   54  \n\n/home/tweaver/workspace/sdrtrunk-read-only/src/decode/mpt1327/MPT1327Panel.java:\n   55  		super( channel );\n   56  		mState = (MPT1327ChannelState)channel.getProcessingChain().getChannelState();\n   57: 		mState.addListener( this );\n   58  \n   59  		mAliasList = mState.getAliasList();\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/decode/nbfm/NBFMChannelState.java:\n   39  	 * Make the ConventionalChannelState always unsquelched\n   40  	 */\n   41: 	public void addListener( SquelchListener listener )\n   42  	{\n   43: 		super.addListener( listener );\n   44  		\n   45  		super.setSquelchState( SquelchState.UNSQUELCH );\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/decode/nbfm/NBFMConventionalDecoder.java:\n   60  			 */\n   61  			mDCRemovalFilter = new DCRemovalFilter2( sDC_REMOVAL_RATIO );\n   62: 			mDemodulator.addListener( mDCRemovalFilter );\n   63  \n   64  			/**\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/decode/passport/PassportChannelState.java:\n  171       * Make the ConventionalChannelState always unsquelched\n  172       */\n  173:     public void addListener( SquelchListener listener )\n  174      {\n  175:         super.addListener( listener );\n  176      }\n  177  	\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/decode/passport/PassportDecoder.java:\n   77  			 */\n   78  			mDCRemovalFilter = new DCRemovalFilter2( sDC_REMOVAL_RATIO );\n   79: 			mNBFMDemodulator.addListener( mDCRemovalFilter );\n   80  			mDCRemovalFilter.setListener( this.getFloatReceiver() );\n   81  		}\n   ..\n   90  		if( mSourceSampleType == SampleType.COMPLEX )\n   91  		{\n   92: 			mNBFMDemodulator.addListener( mPassportFSKDecoder );\n   93  		}\n   94  		else\n   ..\n  102  						sPASSPORT_MESSAGE_LENGTH );\n  103  \n  104: 		mPassportFSKDecoder.addListener( mPassportMessageFramer );\n  105  \n  106  		mPassportMessageProcessor = new PassportMessageProcessor( aliasList );\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/decode/passport/PassportMessageProcessor.java:\n   59      public void addMessageListener( Listener<Message> listener )\n   60      {\n   61: 		mBroadcaster.addListener( listener );\n   62      }\n   63  \n\n/home/tweaver/workspace/sdrtrunk-read-only/src/dsp/fsk/LTRFSKDecoder.java:\n  110      }\n  111  \n  112:     public void addListener( Listener<Boolean> listener )\n  113      {\n  114  		mSlicer.setListener( listener );\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/dsp/nbfm/FilteringNBFMDemodulator.java:\n   78  	 * Adds a listener to receive demodulated samples\n   79  	 */\n   80: 	public void addListener( Listener<Float> listener )\n   81      {\n   82: 		mBroadcaster.addListener( listener );\n   83      }\n   84  \n\n/home/tweaver/workspace/sdrtrunk-read-only/src/dsp/nbfm/NBFMDemodulator.java:\n   78  	 * Adds a listener to receive demodulated samples\n   79  	 */\n   80: 	public void addListener( Listener<Float> listener )\n   81      {\n   82: 		mBroadcaster.addListener( listener );\n   83      }\n   84  \n\n/home/tweaver/workspace/sdrtrunk-read-only/src/gui/SDRTrunk.java:\n  124      	//Register spectral panel to receive tuner selection events\n  125      	mControllerPanel.getController()\n  126:     		.addListener( (TunerSelectionListener)mSpectralPanel );\n  127  \n  128      	//Add spectrum panel to receive channel change events\n  129:     	mResourceManager.getChannelManager().addListener( mSpectralPanel );\n  130  \n  131      	//init() the controller to load tuners and playlists\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/gui/control/JFrequencyControl.java:\n  176  	}\n  177  	\n  178: 	public void addListener( FrequencyChangeListener listener )\n  179  	{\n  180  		mListeners.add( listener );\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/instrument/gui/BinaryTapViewPanel.java:\n   42  		\n   43  		mTap = tap;\n   44: 		mTap.addListener( getModel() );\n   45  		\n   46  		getModel().setSampleCount( \n\n/home/tweaver/workspace/sdrtrunk-read-only/src/instrument/gui/FloatTapViewPanel.java:\n   43  		\n   44  		mTap = tap;\n   45: 		mTap.addListener( getModel() );\n   46  \n   47  		mSampleCount = (int)( 2000 * tap.getSampleRateRatio() );\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/instrument/gui/SymbolEventTapViewPanel.java:\n   45  		\n   46  		mTap = tap;\n   47: 		mTap.addListener( getModel() );\n   48  		\n   49  		mSampleCount = (int)( getModel().getSampleCount() * tap.getSampleRateRatio() );\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/instrument/gui/WaveSourceFrame.java:\n   60  	{\n   61  		mSource = source;\n   62: 		mSource.addListener( this );\n   63  		\n   64  		mDesktop = desktop;\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/instrument/tap/Tap.java:\n   71  	 * Registers a listener for data or events produced by this tap\n   72  	 */\n   73: 	public void addListener( TapListener listener )\n   74  	{\n   75  		if( !mListeners.contains( listener ) )\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/map/MapPanel.java:\n   63  		 */\n   64  		mMapViewer.setOverlayPainter( mMapPainter );\n   65: 		mMapService.addListener( this );\n   66  		\n   67      	/**\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/map/MapService.java:\n  142      }\n  143  	\n  144: 	public void addListener( PlottableUpdateListener listener )\n  145  	{\n  146  		mListeners.add( listener );\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/sample/Broadcaster.java:\n   52  	}\n   53  	\n   54: 	public void addListener( Listener<T> listener )\n   55  	{\n   56  		mListeners.add( listener );\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/settings/SettingsManager.java:\n  807  	}\n  808  	\n  809: 	public void addListener( SettingChangeListener listener )\n  810  	{\n  811  		mListeners.add( listener );\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/source/tuner/FrequencyChangeBroadcaster.java:\n   20  public interface FrequencyChangeBroadcaster\n   21  {\n   22: 	public abstract void addListener( FrequencyChangeListener listener );\n   23  	\n   24      public abstract void removeListener( FrequencyChangeListener listener );\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/source/tuner/FrequencyController.java:\n  172  	 * Adds listener to receive frequency change events\n  173  	 */\n  174: 	public void addListener( FrequencyChangeListener listener )\n  175  	{\n  176  		if( !mListeners.contains( listener ) )\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/source/tuner/MixerTuner.java:\n   82  	 */\n   83  	@Override\n   84:     public void addListener( Listener<Float[]> listener )\n   85      {\n   86  		mMixerSource.setListener( listener );\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/source/tuner/Tuner.java:\n  128  	 * Registers the listener to receive complex float sample arrays\n  129  	 */\n  130:     public void addListener( Listener<Float[]> listener )\n  131      {\n  132  		mSampleListeners.add( listener );\n  ...\n  156       * change events\n  157       */\n  158: 	public void addListener( FrequencyChangeListener listener )\n  159  	{\n  160  		mFrequencyChangeListeners.add( listener );\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/source/tuner/TunerChannelSource.java:\n   75  	    \n   76  	    mTuner = tuner;\n   77: 	    mTuner.addListener( (FrequencyChangeListener)this );\n   78  	    \n   79  	    mTunerChannel = tunerChannel;\n   ..\n   90  \n   91  		/* Finally, register to receive samples from the tuner */\n   92: 		mTuner.addListener( (Listener<Float[]>)this );\n   93      }\n   94  	\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/source/tuner/TunerController.java:\n  236  	 * be registered on the tuner.\n  237  	 */\n  238:     public void addListener( FrequencyChangeListener listener )\n  239      {\n  240:     	mFrequencyController.addListener( listener );\n  241      }\n  242  \n\n/home/tweaver/workspace/sdrtrunk-read-only/src/source/tuner/TunerNode.java:\n   44  		super( tuner );  //does this make it a super tuner?\n   45  		\n   46: 		tuner.addListener( this );\n   47  		\n   48  		try\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/source/tuner/fcd/FCDTuner.java:\n   48  		\n   49  		mController = controller;\n   50: 		mController.addListener( (FrequencyChangeListener)this );\n   51  	}\n   52  	\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/source/tuner/fcd/proV1/FCD1TunerEditorPanel.java:\n   63          mFrequencyControl = new JFrequencyControl();\n   64          \n   65:         mFrequencyControl.addListener( this );\n   66          \n   67          /* Add frequency control as listener to tuner to get frequency changes\n   68           * that are invoked elsewhere, to keep the control in sync with the\n   69           * frequency */\n   70:         mTuner.addListener( mFrequencyControl );\n   71          \n   72          mFrequencyControl.setFrequency( mController.getFrequency(), false );\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/source/tuner/fcd/proplusV2/FCD2TunerEditorPanel.java:\n   63          mFrequencyControl = new JFrequencyControl();\n   64          \n   65:         mFrequencyControl.addListener( this );\n   66          \n   67          /* Add frequency control as frequency change listener.  This creates a\n   68           * feedback loop, so the control does not rebroadcast the event */\n   69:         mTuner.addListener( mFrequencyControl );\n   70          \n   71          mFrequencyControl.setFrequency( mController.getFrequency(), false );\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/source/tuner/rtl/RTL2832Tuner.java:\n   52  		mTunerClass = tunerClass;\n   53  		mController = controller;\n   54: 		mController.addListener( (FrequencyChangeListener)this );\n   55  	}\n   56  	\n   ..\n  156  \n  157  	@Override\n  158: 	public void addListener( Listener<Float[]> listener )\n  159  	{\n  160: 		mController.addListener( listener );\n  161  	}\n  162  	\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/source/tuner/rtl/RTL2832TunerController.java:\n 1410  	 * not currently running, starts it running in a new thread.\n 1411  	 */\n 1412:     public void addListener( Listener<Float[]> listener )\n 1413      {\n 1414  		mSampleListeners.add( listener );\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/source/tuner/rtl/e4k/E4KTunerEditorPanel.java:\n   62          mFrequencyControl = new JFrequencyControl();\n   63          \n   64:         mFrequencyControl.addListener( this );\n   65          \n   66          /* Add frequency control as listener on the controller, to maintain\n   67           * sync with the tuned frequency value */\n   68:         mController.addListener( mFrequencyControl );\n   69          \n   70          mFrequencyControl.setFrequency( mController.getFrequency(), false );\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/source/tuner/rtl/r820t/R820TTunerEditorPanel.java:\n   63          mFrequencyControl = new JFrequencyControl();\n   64          \n   65:         mFrequencyControl.addListener( this );\n   66          \n   67          /* Add frequency control as frequency change listener. */\n   68:         mController.addListener( mFrequencyControl );\n   69          \n   70          mFrequencyControl.setFrequency( mController.getFrequency(), false );\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/source/wave/ComplexWaveSource.java:\n  283       * Adds a new listener to receive samples as they are read from the wave file\n  284       */\n  285:     public void addListener( Listener<ComplexSample> listener )\n  286      {\n  287          mListeners.add( listener );\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/source/wave/WaveSource.java:\n   55  	}\n   56  	\n   57: 	public void addListener( PositionListener listener )\n   58  	{\n   59  		mListener = listener;\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/spectrum/DFTProcessor.java:\n  459  \n  460  	@Override\n  461:     public void addListener( DFTResultsListener listener )\n  462      {\n  463  		mListeners.add( listener );\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/spectrum/DFTResultsProvider.java:\n   20  public interface DFTResultsProvider\n   21  {\n   22: 	public void addListener( DFTResultsListener listener );\n   23  	\n   24  	public void removeListener( DFTResultsListener listener );\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/spectrum/SpectralDisplayPanel.java:\n  257  \n  258  		//Register for any future settings (ie color) changes\n  259: 		mResourceManager.getSettingsManager().addListener( this );\n  260  		\n  261      	/**\n  ...\n  312      	 */\n  313  		mDFTProcessor = new DFTProcessor( SampleType.COMPLEX );\n  314:     	mDFTProcessor.addListener( (DFTResultsListener)mSpectrumPanel );\n  315:     	mDFTProcessor.addListener( (DFTResultsListener)mWaterfallPanel );\n  316      }\n  317  \n  ...\n  356  		{\n  357  			//Register to receive frequency change events\n  358: 			mTuner.addListener( (FrequencyChangeListener)this );\n  359  \n  360  			//Register the dft processor to receive samples from the tuner\n  361: 			mTuner.addListener( (Listener<Float[]>)mDFTProcessor );\n  362  			\n  363  			//Fire a frequency change event so that everyone can init\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/spectrum/SpectrumFrame.java:\n   50  \n   51  		/* Register spectral display on channel manager to get channel updates */\n   52: 		mResourceManager.getChannelManager().addListener( mSpectralDisplayPanel );\n   53  		\n   54  		/* Register a shutdown listener */\n\n118 matches across 65 files\n\n\nSearching 477 files for \"TunerSelectionListener\"\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/controller/ConfigurationControllerModel.java:\n   36  import source.tuner.TunerGroupNode;\n   37  import source.tuner.TunerNode;\n   38: import source.tuner.TunerSelectionListener;\n   39  import controller.channel.Channel;\n   40  import controller.channel.ChannelListener;\n   ..\n   59  			new ArrayList<ChannelListener>();\n   60  \n   61:     private ArrayList<TunerSelectionListener> mTunerSelectionListeners =\n   62: 			new ArrayList<TunerSelectionListener>();\n   63  \n   64      \n   ..\n  223      }\n  224  \n  225:     public void addListener( TunerSelectionListener listener )\n  226      {\n  227:     	mTunerSelectionListeners.add( listener );\n  228      }\n  229      \n  230:     public void removeListener( TunerSelectionListener listener )\n  231      {\n  232:     	mTunerSelectionListeners.remove( listener );\n  233      }\n  234  \n  ...\n  238      public void fireTunerSelectedEvent( Tuner tuner )\n  239      {\n  240:     	Iterator<TunerSelectionListener> it = \n  241:     			mTunerSelectionListeners.iterator();\n  242      	\n  243      	while( it.hasNext() )\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/gui/SDRTrunk.java:\n   41  import net.miginfocom.swing.MigLayout;\n   42  import properties.SystemProperties;\n   43: import source.tuner.TunerSelectionListener;\n   44  import spectrum.SpectralDisplayPanel;\n   45  import util.TimeStamp;\n   ..\n  124      	//Register spectral panel to receive tuner selection events\n  125      	mControllerPanel.getController()\n  126:     		.addListener( (TunerSelectionListener)mSpectralPanel );\n  127  \n  128      	//Add spectrum panel to receive channel change events\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/source/tuner/TunerSelectionListener.java:\n   18  package source.tuner;\n   19  \n   20: public interface TunerSelectionListener\n   21  {\n   22  	public void tunerSelected( Tuner tuner );\n\n/home/tweaver/workspace/sdrtrunk-read-only/src/spectrum/SpectralDisplayPanel.java:\n   55  import source.tuner.FrequencyChangeListener;\n   56  import source.tuner.Tuner;\n   57: import source.tuner.TunerSelectionListener;\n   58  \n   59  import com.jidesoft.swing.JideSplitPane;\n   ..\n   79  								  			 FrequencyChangeListener,\n   80  								  			 SettingChangeListener,\n   81: 								  			 TunerSelectionListener\n   82   {\n   83      private static final long serialVersionUID = 1L;\n\n15 matches across 4 files\n",
			"settings":
			{
				"buffer_size": 77316,
				"line_ending": "Unix",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "src/gui/SDRTrunk.java",
			"settings":
			{
				"buffer_size": 9514,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/controller/system/SystemNode.java",
			"settings":
			{
				"buffer_size": 3915,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/controller/system/SystemEditor.java",
			"settings":
			{
				"buffer_size": 2919,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/controller/system/System.java",
			"settings":
			{
				"buffer_size": 2077,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/controller/ConfigurationControllerModel.java",
			"settings":
			{
				"buffer_size": 7976,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/map/IconManager.java",
			"settings":
			{
				"buffer_size": 13144,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/spectrum/SpectralDisplayPanel.java",
			"settings":
			{
				"buffer_size": 21754,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/spectrum/DFTProcessor.java",
			"settings":
			{
				"buffer_size": 12717,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/source/tuner/Tuner.java",
			"settings":
			{
				"buffer_size": 5426,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/source/tuner/MixerTuner.java",
			"settings":
			{
				"buffer_size": 2942,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/source/mixer/MixerSource.java",
			"settings":
			{
				"buffer_size": 7948,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Packages/User/c++/opencv_singlefile.sublime-build",
	"command_palette":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"console":
	{
		"height": 125.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/home/tweaver/workspace/sdrtrunk-read-only/src/crc/CRCUtil.java",
		"/home/tweaver/workspace/sdrtrunk-read-only/src/crc/CRC.java",
		"/home/tweaver/workspace/sdrtrunk-read-only/src/crc/CRCFleetsync.java",
		"/home/tweaver/workspace/sdrtrunk-read-only/src/source/tuner/ettus/B100Tuner.java",
		"/home/tweaver/workspace/sdrtrunk-read-only/.project",
		"/home/tweaver/bin/ssh_wistle05.sh",
		"/home/tweaver/workspace/sdrtrunk-read-only/src/crc/Checksum.java",
		"/home/tweaver/workspace/sdrtrunk-read-only/src/crc/ChecksumTest.java",
		"/home/tweaver/workspace/sdrtrunk-read-only/src/crc/ChecksumType.java",
		"/home/tweaver/workspace/sdrtrunk-read-only/src/audio/InversionFrequency.java",
		"/home/tweaver/workspace/sdrtrunk-read-only/src/dsp/fsk/FSK2Decoder.java",
		"/home/tweaver/workspace/sdrtrunk-read-only/src/crc/CRCPassport.java",
		"/home/tweaver/workspace/sdrtrunk-read-only/src/crc/CRCLTR.java",
		"/home/tweaver/bin/delete_repo.sh",
		"/home/tweaver/buff4/notes/assn71714",
		"/home/tweaver/bin/edit_description_repo.sh",
		"/home/tweaver/bin/git_add_remote.sh",
		"/home/tweaver/bin/git_clone.sh",
		"/home/tweaver/bin/jersey.sh",
		"/home/tweaver/bin/new_repo.sh",
		"/home/tweaver/.config/sublime-text-2/Packages/User/c++/opencv_singlefile.sublime-build",
		"/home/tweaver/workspace/opencv_book/contours/contours.cpp",
		"/home/tweaver/.bashrc",
		"/home/tweaver/dev/trunk/src/makefile",
		"/home/tweaver/cdma_phy_api_test.pj/README.md",
		"/home/tweaver/cdma_phy_api_test.pj/time_test.pl",
		"/home/tweaver/workspace/opencv_book/object/object.cpp",
		"/home/tweaver/buff4/notes/jersey_setup",
		"/mnt/buff4/notes/jersey_setup",
		"/home/tweaver/dev/trunk/src/wstl/src/wstl_survey_engine.cpp",
		"/home/tweaver/buff4/notes/gcc4.6.4_install",
		"/home/tweaver/workspace/opencv_book/sublime/using.sublime-snippet",
		"/home/tweaver/workspace/opencv_book/sublime/switch.sublime-snippet",
		"/home/tweaver/gcc/gcc-4.6.4/gcc/doc/install.texi",
		"/home/tweaver/cdma_phy_api_test.pj/crc_pn_values.plx",
		"/home/tweaver/cdma_phy_api_test.pj/crc_pn_test_results",
		"/home/tweaver/cdma_phy_api_test.pj/sync_crc_test.pl",
		"/home/tweaver/cdma_phy_api_test.pj/sync_crc_test.plx",
		"/home/tweaver/cdma_phy_api_test.pj/pilot_test.plx",
		"/home/tweaver/cdma_phy_api_test.pj/description",
		"/home/tweaver/cdma_phy_api_test.pj/array_test_32_pilot.pl",
		"/home/tweaver/cdma_phy_api_test.pj/array_test.pl",
		"/home/tweaver/workspace/perl/delete_repo.sh",
		"/home/tweaver/bin/push_existing_repo.sh",
		"/home/tweaver/bin/init_existing_repo.sh",
		"/home/tweaver/dev/trunk/src/gui/np3/makefile",
		"/home/tweaver/.ssh/config",
		"/home/tweaver/cdma_phy_api_test.pj/synch_count.pl",
		"/home/tweaver/workspace/perl/new_repo2.sh",
		"/home/tweaver/workspace/perl/.git/description",
		"/home/tweaver/dev/trunk/buildtools/bin/README",
		"/home/tweaver/dev/trunk/src/usr/extern/boost/makefile",
		"/home/tweaver/.config/sublime-text-2/Packages/User/c/c.sublime-build",
		"/home/tweaver/.subversion/config",
		"/home/tweaver/cdma_phy_api_test.pj/time_to_events.py",
		"/home/tweaver/.config/sublime-text-2/Packages/User/perl/perl.sublime-build",
		"/home/tweaver/cdma_phy_api_test.pj/offsetTest.pl",
		"/home/tweaver/cdma_phy_api_test.pj/array_operations.pl",
		"/home/tweaver/cdma_phy_api_test.pj/ecio_test.plx",
		"/home/tweaver/cdma_phy_api_test.pj/app.conf",
		"/mnt/buff4/config",
		"/home/tweaver/.config/sublime-text-2/Packages/User/perl/perl_header.sublime-snippet"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 90.0,
		"where_history":
		[
			"<open folders>",
			"/home/tweaver/dev/trunk/src"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"TunerSelectionListener",
			"addListener(",
			"SystemEditor(",
			"SystemNode(",
			"Name:",
			"New System",
			"tree",
			"filename",
			"low",
			"Low",
			"low",
			"Low",
			"_r",
			"4.6.3",
			"syscall",
			"installUsr",
			"FILENAME",
			"filen",
			"build_1_55_successful_64",
			"(\"",
			");",
			"(",
			"$sync_time == ",
			"m/",
			"m",
			"res",
			"$h",
			"/(",
			"min"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 10,
			"sheets":
			[
				{
					"buffer": 0,
					"settings":
					{
						"buffer_size": 77316,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										260,
										268
									],
									[
										471,
										479
									],
									[
										693,
										701
									],
									[
										945,
										953
									],
									[
										1232,
										1240
									],
									[
										1289,
										1297
									],
									[
										1470,
										1478
									],
									[
										1696,
										1704
									],
									[
										1739,
										1747
									],
									[
										1846,
										1854
									],
									[
										1922,
										1930
									],
									[
										1939,
										1947
									],
									[
										2034,
										2042
									],
									[
										2085,
										2093
									],
									[
										2265,
										2273
									],
									[
										2310,
										2318
									],
									[
										2400,
										2408
									],
									[
										2496,
										2504
									],
									[
										2617,
										2625
									],
									[
										2653,
										2661
									],
									[
										2736,
										2744
									],
									[
										2850,
										2858
									],
									[
										2861,
										2869
									],
									[
										2945,
										2953
									],
									[
										3086,
										3094
									],
									[
										3313,
										3321
									],
									[
										3381,
										3389
									],
									[
										3572,
										3580
									],
									[
										3737,
										3745
									],
									[
										3954,
										3962
									],
									[
										4021,
										4029
									],
									[
										4155,
										4163
									],
									[
										4321,
										4329
									],
									[
										4504,
										4512
									],
									[
										4659,
										4667
									],
									[
										4690,
										4698
									],
									[
										4818,
										4826
									],
									[
										4868,
										4876
									],
									[
										4956,
										4964
									],
									[
										5205,
										5213
									],
									[
										5415,
										5423
									],
									[
										5672,
										5680
									],
									[
										5782,
										5790
									],
									[
										6032,
										6040
									],
									[
										6150,
										6158
									],
									[
										6312,
										6320
									],
									[
										6554,
										6562
									],
									[
										6748,
										6756
									],
									[
										6916,
										6924
									],
									[
										7165,
										7173
									],
									[
										7482,
										7490
									],
									[
										7686,
										7694
									],
									[
										7845,
										7853
									],
									[
										7856,
										7864
									],
									[
										7928,
										7936
									],
									[
										7966,
										7974
									],
									[
										8082,
										8090
									],
									[
										8351,
										8359
									],
									[
										8557,
										8565
									],
									[
										8718,
										8726
									],
									[
										8729,
										8737
									],
									[
										8800,
										8808
									],
									[
										8838,
										8846
									],
									[
										8955,
										8963
									],
									[
										9222,
										9230
									],
									[
										9424,
										9432
									],
									[
										9583,
										9591
									],
									[
										9594,
										9602
									],
									[
										9666,
										9674
									],
									[
										9704,
										9712
									],
									[
										9820,
										9828
									],
									[
										10082,
										10090
									],
									[
										10282,
										10290
									],
									[
										10393,
										10401
									],
									[
										10404,
										10412
									],
									[
										10512,
										10520
									],
									[
										10752,
										10760
									],
									[
										10862,
										10870
									],
									[
										11112,
										11120
									],
									[
										11230,
										11238
									],
									[
										11392,
										11400
									],
									[
										11593,
										11601
									],
									[
										11702,
										11710
									],
									[
										11739,
										11747
									],
									[
										11777,
										11785
									],
									[
										11829,
										11837
									],
									[
										11845,
										11853
									],
									[
										11875,
										11883
									],
									[
										11886,
										11894
									],
									[
										12105,
										12113
									],
									[
										12393,
										12401
									],
									[
										12409,
										12417
									],
									[
										12540,
										12548
									],
									[
										12818,
										12826
									],
									[
										12919,
										12927
									],
									[
										13002,
										13010
									],
									[
										13244,
										13252
									],
									[
										13384,
										13392
									],
									[
										13467,
										13475
									],
									[
										13478,
										13486
									],
									[
										13571,
										13579
									],
									[
										13583,
										13591
									],
									[
										13673,
										13681
									],
									[
										13743,
										13751
									],
									[
										13991,
										13999
									],
									[
										14096,
										14104
									],
									[
										14208,
										14216
									],
									[
										14375,
										14383
									],
									[
										14530,
										14538
									],
									[
										14542,
										14550
									],
									[
										14623,
										14631
									],
									[
										14757,
										14765
									],
									[
										15062,
										15066
									],
									[
										15067,
										15071
									],
									[
										15215,
										15219
									],
									[
										15252,
										15256
									],
									[
										15419,
										15423
									],
									[
										15456,
										15460
									],
									[
										15730,
										15734
									],
									[
										16048,
										16052
									],
									[
										16317,
										16321
									],
									[
										16322,
										16326
									],
									[
										16489,
										16493
									],
									[
										16526,
										16530
									],
									[
										16693,
										16697
									],
									[
										16730,
										16734
									],
									[
										17000,
										17004
									],
									[
										17268,
										17272
									],
									[
										17273,
										17277
									],
									[
										17439,
										17443
									],
									[
										17476,
										17480
									],
									[
										17639,
										17643
									],
									[
										17662,
										17666
									],
									[
										17933,
										17937
									],
									[
										18267,
										18271
									],
									[
										18598,
										18602
									],
									[
										18924,
										18928
									],
									[
										19249,
										19253
									],
									[
										19579,
										19583
									],
									[
										19905,
										19909
									],
									[
										20239,
										20243
									],
									[
										20569,
										20573
									],
									[
										20840,
										20844
									],
									[
										20859,
										20863
									],
									[
										20895,
										20899
									],
									[
										20900,
										20904
									],
									[
										20969,
										20973
									],
									[
										21118,
										21122
									],
									[
										21203,
										21207
									],
									[
										21208,
										21212
									],
									[
										21462,
										21466
									],
									[
										21492,
										21496
									],
									[
										21697,
										21701
									],
									[
										21920,
										21924
									],
									[
										22006,
										22010
									],
									[
										22197,
										22201
									],
									[
										22435,
										22439
									],
									[
										22467,
										22471
									],
									[
										22486,
										22490
									],
									[
										22522,
										22526
									],
									[
										22534,
										22538
									],
									[
										22571,
										22575
									],
									[
										22583,
										22587
									],
									[
										22619,
										22623
									],
									[
										22624,
										22628
									],
									[
										22800,
										22804
									],
									[
										22911,
										22915
									],
									[
										22917,
										22921
									],
									[
										23064,
										23068
									],
									[
										23153,
										23157
									],
									[
										23289,
										23293
									],
									[
										23561,
										23565
									],
									[
										23689,
										23693
									],
									[
										23697,
										23701
									],
									[
										23731,
										23735
									],
									[
										23880,
										23884
									],
									[
										24108,
										24112
									],
									[
										24301,
										24305
									],
									[
										24426,
										24430
									],
									[
										24469,
										24473
									],
									[
										24528,
										24532
									],
									[
										24555,
										24559
									],
									[
										24657,
										24661
									],
									[
										24664,
										24668
									],
									[
										24669,
										24673
									],
									[
										24696,
										24700
									],
									[
										24703,
										24707
									],
									[
										24850,
										24854
									],
									[
										25028,
										25032
									],
									[
										25071,
										25075
									],
									[
										25101,
										25105
									],
									[
										25269,
										25273
									],
									[
										25519,
										25523
									],
									[
										25663,
										25667
									],
									[
										25799,
										25803
									],
									[
										26082,
										26086
									],
									[
										26120,
										26124
									],
									[
										26172,
										26176
									],
									[
										26288,
										26292
									],
									[
										26448,
										26452
									],
									[
										26494,
										26498
									],
									[
										26499,
										26503
									],
									[
										26508,
										26512
									],
									[
										26585,
										26589
									],
									[
										26853,
										26857
									],
									[
										26933,
										26937
									],
									[
										26982,
										26986
									],
									[
										26987,
										26991
									],
									[
										27102,
										27106
									],
									[
										27220,
										27224
									],
									[
										27232,
										27236
									],
									[
										27286,
										27290
									],
									[
										27334,
										27338
									],
									[
										27405,
										27409
									],
									[
										27576,
										27580
									],
									[
										27588,
										27592
									],
									[
										27595,
										27599
									],
									[
										27624,
										27628
									],
									[
										27679,
										27683
									],
									[
										27705,
										27709
									],
									[
										27739,
										27743
									],
									[
										27789,
										27793
									],
									[
										27845,
										27849
									],
									[
										27881,
										27885
									],
									[
										27956,
										27960
									],
									[
										28038,
										28042
									],
									[
										28051,
										28055
									],
									[
										28064,
										28068
									],
									[
										28101,
										28105
									],
									[
										28138,
										28142
									],
									[
										28163,
										28167
									],
									[
										28241,
										28245
									],
									[
										28264,
										28268
									],
									[
										28323,
										28327
									],
									[
										28331,
										28335
									],
									[
										28490,
										28494
									],
									[
										28639,
										28643
									],
									[
										28737,
										28741
									],
									[
										28937,
										28941
									],
									[
										29185,
										29189
									],
									[
										29478,
										29482
									],
									[
										29564,
										29568
									],
									[
										29874,
										29878
									],
									[
										29906,
										29910
									],
									[
										29918,
										29922
									],
									[
										29974,
										29978
									],
									[
										30006,
										30010
									],
									[
										30225,
										30229
									],
									[
										30330,
										30334
									],
									[
										30358,
										30362
									],
									[
										30363,
										30367
									],
									[
										30536,
										30540
									],
									[
										30563,
										30567
									],
									[
										30799,
										30803
									],
									[
										31028,
										31032
									],
									[
										31365,
										31369
									],
									[
										31591,
										31595
									],
									[
										31603,
										31607
									],
									[
										31640,
										31644
									],
									[
										31645,
										31649
									],
									[
										31810,
										31814
									],
									[
										31821,
										31825
									],
									[
										31928,
										31932
									],
									[
										31970,
										31974
									],
									[
										32137,
										32141
									],
									[
										32172,
										32176
									],
									[
										32317,
										32321
									],
									[
										32340,
										32344
									],
									[
										32571,
										32575
									],
									[
										32576,
										32580
									],
									[
										32757,
										32761
									],
									[
										32793,
										32797
									],
									[
										32952,
										32956
									],
									[
										32975,
										32979
									],
									[
										33206,
										33210
									],
									[
										33225,
										33229
									],
									[
										33386,
										33390
									],
									[
										33652,
										33656
									],
									[
										33657,
										33661
									],
									[
										33840,
										33844
									],
									[
										33876,
										33880
									],
									[
										34044,
										34048
									],
									[
										34067,
										34071
									],
									[
										34304,
										34308
									],
									[
										34323,
										34327
									],
									[
										34484,
										34488
									],
									[
										34730,
										34734
									],
									[
										34847,
										34851
									],
									[
										34877,
										34881
									],
									[
										34912,
										34916
									],
									[
										34951,
										34955
									],
									[
										35171,
										35175
									],
									[
										35358,
										35362
									],
									[
										35392,
										35396
									],
									[
										35427,
										35431
									],
									[
										35455,
										35459
									],
									[
										35490,
										35494
									],
									[
										35524,
										35528
									],
									[
										35560,
										35564
									],
									[
										35596,
										35600
									],
									[
										35632,
										35636
									],
									[
										35664,
										35668
									],
									[
										35979,
										35983
									],
									[
										36166,
										36170
									],
									[
										36200,
										36204
									],
									[
										36235,
										36239
									],
									[
										36270,
										36274
									],
									[
										36487,
										36491
									],
									[
										36604,
										36608
									],
									[
										36634,
										36638
									],
									[
										36669,
										36673
									],
									[
										36708,
										36712
									],
									[
										36905,
										36909
									],
									[
										37021,
										37025
									],
									[
										37051,
										37055
									],
									[
										37290,
										37294
									],
									[
										37477,
										37481
									],
									[
										37511,
										37515
									],
									[
										37546,
										37550
									],
									[
										37579,
										37583
									],
									[
										37934,
										37938
									],
									[
										38086,
										38090
									],
									[
										38307,
										38311
									],
									[
										38487,
										38491
									],
									[
										38524,
										38528
									],
									[
										38749,
										38753
									],
									[
										38871,
										38875
									],
									[
										38998,
										39002
									],
									[
										39195,
										39199
									],
									[
										39407,
										39411
									],
									[
										39532,
										39536
									],
									[
										39685,
										39689
									],
									[
										40006,
										40010
									],
									[
										40313,
										40317
									],
									[
										40648,
										40658
									],
									[
										40838,
										40848
									],
									[
										41167,
										41177
									],
									[
										41401,
										41411
									],
									[
										41641,
										41651
									],
									[
										41760,
										41770
									],
									[
										42026,
										42036
									],
									[
										42326,
										42336
									],
									[
										42520,
										42530
									],
									[
										42645,
										42655
									],
									[
										42901,
										42911
									],
									[
										43189,
										43194
									],
									[
										43434,
										43439
									],
									[
										43677,
										43682
									],
									[
										43895,
										43900
									],
									[
										44196,
										44201
									],
									[
										44413,
										44418
									],
									[
										44669,
										44674
									],
									[
										44930,
										44935
									],
									[
										45184,
										45189
									],
									[
										45212,
										45217
									],
									[
										45242,
										45247
									],
									[
										45564,
										45569
									],
									[
										45604,
										45609
									],
									[
										45646,
										45651
									],
									[
										45916,
										45921
									],
									[
										45944,
										45949
									],
									[
										45974,
										45979
									],
									[
										46243,
										46248
									],
									[
										46271,
										46276
									],
									[
										46301,
										46306
									],
									[
										46574,
										46579
									],
									[
										46850,
										46855
									],
									[
										47209,
										47214
									],
									[
										47518,
										47523
									],
									[
										47756,
										47761
									],
									[
										48013,
										48018
									],
									[
										48364,
										48375
									],
									[
										48746,
										48757
									],
									[
										48968,
										48979
									],
									[
										49250,
										49261
									],
									[
										49533,
										49546
									],
									[
										49758,
										49771
									],
									[
										50057,
										50069
									],
									[
										50308,
										50320
									],
									[
										50581,
										50593
									],
									[
										50686,
										50698
									],
									[
										51016,
										51028
									],
									[
										51315,
										51327
									],
									[
										51555,
										51567
									],
									[
										51782,
										51794
									],
									[
										52022,
										52034
									],
									[
										52098,
										52110
									],
									[
										52324,
										52336
									],
									[
										52508,
										52520
									],
									[
										52599,
										52611
									],
									[
										52769,
										52781
									],
									[
										53015,
										53027
									],
									[
										53199,
										53211
									],
									[
										53311,
										53323
									],
									[
										53611,
										53623
									],
									[
										53915,
										53927
									],
									[
										54129,
										54141
									],
									[
										54268,
										54280
									],
									[
										54385,
										54397
									],
									[
										54465,
										54477
									],
									[
										54605,
										54617
									],
									[
										54810,
										54822
									],
									[
										54899,
										54911
									],
									[
										55117,
										55129
									],
									[
										55235,
										55247
									],
									[
										55492,
										55504
									],
									[
										55634,
										55646
									],
									[
										55841,
										55853
									],
									[
										55933,
										55945
									],
									[
										56162,
										56174
									],
									[
										56310,
										56322
									],
									[
										56514,
										56526
									],
									[
										56732,
										56744
									],
									[
										56892,
										56904
									],
									[
										57064,
										57076
									],
									[
										57316,
										57328
									],
									[
										57568,
										57580
									],
									[
										57805,
										57817
									],
									[
										58011,
										58023
									],
									[
										58118,
										58130
									],
									[
										58442,
										58454
									],
									[
										58669,
										58681
									],
									[
										58944,
										58956
									],
									[
										59150,
										59162
									],
									[
										59257,
										59269
									],
									[
										59596,
										59608
									],
									[
										59838,
										59850
									],
									[
										60090,
										60102
									],
									[
										60317,
										60329
									],
									[
										60391,
										60403
									],
									[
										60661,
										60673
									],
									[
										60936,
										60948
									],
									[
										61208,
										61220
									],
									[
										61409,
										61421
									],
									[
										61666,
										61678
									],
									[
										61924,
										61936
									],
									[
										62177,
										62189
									],
									[
										62242,
										62254
									],
									[
										62534,
										62546
									],
									[
										62785,
										62797
									],
									[
										62859,
										62871
									],
									[
										63105,
										63117
									],
									[
										63315,
										63327
									],
									[
										63460,
										63472
									],
									[
										63789,
										63801
									],
									[
										63955,
										63967
									],
									[
										64230,
										64242
									],
									[
										64305,
										64317
									],
									[
										64520,
										64532
									],
									[
										64595,
										64607
									],
									[
										64839,
										64851
									],
									[
										65017,
										65029
									],
									[
										65244,
										65256
									],
									[
										65472,
										65484
									],
									[
										65678,
										65690
									],
									[
										65917,
										65929
									],
									[
										66182,
										66194
									],
									[
										66419,
										66431
									],
									[
										66668,
										66680
									],
									[
										66826,
										66838
									],
									[
										67033,
										67045
									],
									[
										67234,
										67246
									],
									[
										67510,
										67522
									],
									[
										67831,
										67843
									],
									[
										68068,
										68080
									],
									[
										68351,
										68363
									],
									[
										68518,
										68530
									],
									[
										68774,
										68786
									],
									[
										68972,
										68984
									],
									[
										69191,
										69203
									],
									[
										69285,
										69297
									],
									[
										69494,
										69506
									],
									[
										69684,
										69696
									],
									[
										69956,
										69968
									],
									[
										70215,
										70227
									],
									[
										70560,
										70572
									],
									[
										70787,
										70799
									],
									[
										71096,
										71108
									],
									[
										71213,
										71225
									],
									[
										71286,
										71298
									],
									[
										71528,
										71540
									],
									[
										71830,
										71842
									],
									[
										72034,
										72046
									],
									[
										72376,
										72388
									],
									[
										72513,
										72525
									],
									[
										72858,
										72870
									],
									[
										73078,
										73090
									],
									[
										73285,
										73297
									],
									[
										73532,
										73544
									],
									[
										73854,
										73866
									],
									[
										74014,
										74026
									],
									[
										74091,
										74103
									],
									[
										74254,
										74266
									],
									[
										74398,
										74410
									],
									[
										74740,
										74752
									],
									[
										75114,
										75136
									],
									[
										75317,
										75339
									],
									[
										75342,
										75364
									],
									[
										75392,
										75414
									],
									[
										75502,
										75524
									],
									[
										75562,
										75584
									],
									[
										75667,
										75689
									],
									[
										75727,
										75749
									],
									[
										75893,
										75915
									],
									[
										75938,
										75960
									],
									[
										76204,
										76226
									],
									[
										76454,
										76476
									],
									[
										76720,
										76742
									],
									[
										76999,
										77021
									],
									[
										77196,
										77218
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								76429,
								76429
							]
						],
						"settings":
						{
							"detect_indentation": false,
							"output_tag": 8,
							"result_base_dir": "",
							"result_file_regex": "^([A-Za-z\\\\/<].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 32490.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "src/gui/SDRTrunk.java",
					"settings":
					{
						"buffer_size": 9514,
						"regions":
						{
						},
						"selection":
						[
							[
								3395,
								3395
							]
						],
						"settings":
						{
							"syntax": "Packages/Java/Java.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1266.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "src/controller/system/SystemNode.java",
					"settings":
					{
						"buffer_size": 3915,
						"regions":
						{
						},
						"selection":
						[
							[
								2280,
								2280
							]
						],
						"settings":
						{
							"syntax": "Packages/Java/Java.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 36.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "src/controller/system/SystemEditor.java",
					"settings":
					{
						"buffer_size": 2919,
						"regions":
						{
						},
						"selection":
						[
							[
								1293,
								1293
							]
						],
						"settings":
						{
							"syntax": "Packages/Java/Java.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 180.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "src/controller/system/System.java",
					"settings":
					{
						"buffer_size": 2077,
						"regions":
						{
						},
						"selection":
						[
							[
								1769,
								1769
							]
						],
						"settings":
						{
							"syntax": "Packages/Java/Java.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 225.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "src/controller/ConfigurationControllerModel.java",
					"settings":
					{
						"buffer_size": 7976,
						"regions":
						{
						},
						"selection":
						[
							[
								4921,
								4921
							]
						],
						"settings":
						{
							"syntax": "Packages/Java/Java.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2511.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "src/map/IconManager.java",
					"settings":
					{
						"buffer_size": 13144,
						"regions":
						{
						},
						"selection":
						[
							[
								11078,
								11078
							]
						],
						"settings":
						{
							"syntax": "Packages/Java/Java.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 5541.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "src/spectrum/SpectralDisplayPanel.java",
					"settings":
					{
						"buffer_size": 21754,
						"regions":
						{
						},
						"selection":
						[
							[
								10956,
								10956
							]
						],
						"settings":
						{
							"syntax": "Packages/Java/Java.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 5085.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "src/spectrum/DFTProcessor.java",
					"settings":
					{
						"buffer_size": 12717,
						"regions":
						{
						},
						"selection":
						[
							[
								5915,
								5915
							]
						],
						"settings":
						{
							"syntax": "Packages/Java/Java.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 3015.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "src/source/tuner/Tuner.java",
					"settings":
					{
						"buffer_size": 5426,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Java/Java.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 45.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "src/source/tuner/MixerTuner.java",
					"settings":
					{
						"buffer_size": 2942,
						"regions":
						{
						},
						"selection":
						[
							[
								1650,
								1650
							]
						],
						"settings":
						{
							"syntax": "Packages/Java/Java.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 405.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "src/source/mixer/MixerSource.java",
					"settings":
					{
						"buffer_size": 7948,
						"regions":
						{
						},
						"selection":
						[
							[
								4636,
								4636
							]
						],
						"settings":
						{
							"syntax": "Packages/Java/Java.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 360.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 0.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 283.0
	},
	"replace":
	{
		"height": 0.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 213.0,
	"status_bar_visible": true
}
